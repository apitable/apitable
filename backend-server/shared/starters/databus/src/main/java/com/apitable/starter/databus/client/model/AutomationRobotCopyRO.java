/*
 * databus-server
 * databus-server APIs
 *
 * The version of the OpenAPI document: 1.6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.apitable.starter.databus.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * AutomationRobotCopyRO
 */
@JsonPropertyOrder({
  AutomationRobotCopyRO.JSON_PROPERTY_AUTOMATION_NAME,
  AutomationRobotCopyRO.JSON_PROPERTY_ORIGINAL_RESOURCE_ID,
  AutomationRobotCopyRO.JSON_PROPERTY_RESOURCE_ID,
  AutomationRobotCopyRO.JSON_PROPERTY_USER_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AutomationRobotCopyRO {
  public static final String JSON_PROPERTY_AUTOMATION_NAME = "automation_name";
  private JsonNullable<String> automationName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ORIGINAL_RESOURCE_ID = "original_resource_id";
  private String originalResourceId;

  public static final String JSON_PROPERTY_RESOURCE_ID = "resource_id";
  private String resourceId;

  public static final String JSON_PROPERTY_USER_ID = "user_id";
  private Long userId;

  public AutomationRobotCopyRO() {
  }

  public AutomationRobotCopyRO automationName(String automationName) {
    this.automationName = JsonNullable.<String>of(automationName);
    
    return this;
  }

   /**
   * Get automationName
   * @return automationName
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getAutomationName() {
        return automationName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUTOMATION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getAutomationName_JsonNullable() {
    return automationName;
  }
  
  @JsonProperty(JSON_PROPERTY_AUTOMATION_NAME)
  public void setAutomationName_JsonNullable(JsonNullable<String> automationName) {
    this.automationName = automationName;
  }

  public void setAutomationName(String automationName) {
    this.automationName = JsonNullable.<String>of(automationName);
  }


  public AutomationRobotCopyRO originalResourceId(String originalResourceId) {
    
    this.originalResourceId = originalResourceId;
    return this;
  }

   /**
   * Get originalResourceId
   * @return originalResourceId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ORIGINAL_RESOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getOriginalResourceId() {
    return originalResourceId;
  }


  @JsonProperty(JSON_PROPERTY_ORIGINAL_RESOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOriginalResourceId(String originalResourceId) {
    this.originalResourceId = originalResourceId;
  }


  public AutomationRobotCopyRO resourceId(String resourceId) {
    
    this.resourceId = resourceId;
    return this;
  }

   /**
   * Get resourceId
   * @return resourceId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RESOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getResourceId() {
    return resourceId;
  }


  @JsonProperty(JSON_PROPERTY_RESOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setResourceId(String resourceId) {
    this.resourceId = resourceId;
  }


  public AutomationRobotCopyRO userId(Long userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * minimum: 0
   * @return userId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getUserId() {
    return userId;
  }


  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUserId(Long userId) {
    this.userId = userId;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutomationRobotCopyRO automationRobotCopyRO = (AutomationRobotCopyRO) o;
    return equalsNullable(this.automationName, automationRobotCopyRO.automationName) &&
        Objects.equals(this.originalResourceId, automationRobotCopyRO.originalResourceId) &&
        Objects.equals(this.resourceId, automationRobotCopyRO.resourceId) &&
        Objects.equals(this.userId, automationRobotCopyRO.userId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(automationName), originalResourceId, resourceId, userId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutomationRobotCopyRO {\n");
    sb.append("    automationName: ").append(toIndentedString(automationName)).append("\n");
    sb.append("    originalResourceId: ").append(toIndentedString(originalResourceId)).append("\n");
    sb.append("    resourceId: ").append(toIndentedString(resourceId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

