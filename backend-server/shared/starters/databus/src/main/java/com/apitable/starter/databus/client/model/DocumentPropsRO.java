/*
 * databus-server
 * databus-server APIs
 *
 * The version of the OpenAPI document: 1.8.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.apitable.starter.databus.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * DocumentPropsRO
 */
@JsonPropertyOrder({
  DocumentPropsRO.JSON_PROPERTY_DOCUMENT_NAMES,
  DocumentPropsRO.JSON_PROPERTY_RECORD_ID,
  DocumentPropsRO.JSON_PROPERTY_RESOURCE_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class DocumentPropsRO {
  public static final String JSON_PROPERTY_DOCUMENT_NAMES = "document_names";
  private List<String> documentNames = new ArrayList<>();

  public static final String JSON_PROPERTY_RECORD_ID = "record_id";
  private String recordId;

  public static final String JSON_PROPERTY_RESOURCE_ID = "resource_id";
  private String resourceId;

  public DocumentPropsRO() {
  }

  public DocumentPropsRO documentNames(List<String> documentNames) {
    
    this.documentNames = documentNames;
    return this;
  }

  public DocumentPropsRO addDocumentNamesItem(String documentNamesItem) {
    if (this.documentNames == null) {
      this.documentNames = new ArrayList<>();
    }
    this.documentNames.add(documentNamesItem);
    return this;
  }

   /**
   * Get documentNames
   * @return documentNames
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DOCUMENT_NAMES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getDocumentNames() {
    return documentNames;
  }


  @JsonProperty(JSON_PROPERTY_DOCUMENT_NAMES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDocumentNames(List<String> documentNames) {
    this.documentNames = documentNames;
  }


  public DocumentPropsRO recordId(String recordId) {
    
    this.recordId = recordId;
    return this;
  }

   /**
   * Get recordId
   * @return recordId
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RECORD_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRecordId() {
    return recordId;
  }


  @JsonProperty(JSON_PROPERTY_RECORD_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRecordId(String recordId) {
    this.recordId = recordId;
  }


  public DocumentPropsRO resourceId(String resourceId) {
    
    this.resourceId = resourceId;
    return this;
  }

   /**
   * Get resourceId
   * @return resourceId
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RESOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getResourceId() {
    return resourceId;
  }


  @JsonProperty(JSON_PROPERTY_RESOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setResourceId(String resourceId) {
    this.resourceId = resourceId;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DocumentPropsRO documentPropsRO = (DocumentPropsRO) o;
    return Objects.equals(this.documentNames, documentPropsRO.documentNames) &&
        Objects.equals(this.recordId, documentPropsRO.recordId) &&
        Objects.equals(this.resourceId, documentPropsRO.resourceId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(documentNames, recordId, resourceId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DocumentPropsRO {\n");
    sb.append("    documentNames: ").append(toIndentedString(documentNames)).append("\n");
    sb.append("    recordId: ").append(toIndentedString(recordId)).append("\n");
    sb.append("    resourceId: ").append(toIndentedString(resourceId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

