/*
 * databus-server
 * databus-server APIs
 *
 * The version of the OpenAPI document: 1.8.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.apitable.starter.databus.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.apitable.starter.databus.client.model.NodePermissionStateSO;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * NodeSO
 */
@JsonPropertyOrder({
  NodeSO.JSON_PROPERTY_ACTIVE_VIEW,
  NodeSO.JSON_PROPERTY_DESCRIPTION,
  NodeSO.JSON_PROPERTY_EXTRA,
  NodeSO.JSON_PROPERTY_ICON,
  NodeSO.JSON_PROPERTY_ID,
  NodeSO.JSON_PROPERTY_IS_GHOST_NODE,
  NodeSO.JSON_PROPERTY_NAME,
  NodeSO.JSON_PROPERTY_NODE_FAVORITE,
  NodeSO.JSON_PROPERTY_NODE_PERMIT_SET,
  NodeSO.JSON_PROPERTY_NODE_SHARED,
  NodeSO.JSON_PROPERTY_PARENT_ID,
  NodeSO.JSON_PROPERTY_PERMISSIONS,
  NodeSO.JSON_PROPERTY_REVISION,
  NodeSO.JSON_PROPERTY_ROLE,
  NodeSO.JSON_PROPERTY_SPACE_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class NodeSO {
  public static final String JSON_PROPERTY_ACTIVE_VIEW = "activeView";
  private String activeView;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_EXTRA = "extra";
  private Object extra = null;

  public static final String JSON_PROPERTY_ICON = "icon";
  private String icon;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_IS_GHOST_NODE = "isGhostNode";
  private Boolean isGhostNode;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_NODE_FAVORITE = "nodeFavorite";
  private Boolean nodeFavorite;

  public static final String JSON_PROPERTY_NODE_PERMIT_SET = "nodePermitSet";
  private Boolean nodePermitSet;

  public static final String JSON_PROPERTY_NODE_SHARED = "nodeShared";
  private Boolean nodeShared;

  public static final String JSON_PROPERTY_PARENT_ID = "parentId";
  private String parentId;

  public static final String JSON_PROPERTY_PERMISSIONS = "permissions";
  private NodePermissionStateSO permissions;

  public static final String JSON_PROPERTY_REVISION = "revision";
  private Integer revision;

  public static final String JSON_PROPERTY_ROLE = "role";
  private String role;

  public static final String JSON_PROPERTY_SPACE_ID = "spaceId";
  private String spaceId;

  public NodeSO() {
  }

  public NodeSO activeView(String activeView) {
    
    this.activeView = activeView;
    return this;
  }

   /**
   * Get activeView
   * @return activeView
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTIVE_VIEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getActiveView() {
    return activeView;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVE_VIEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActiveView(String activeView) {
    this.activeView = activeView;
  }


  public NodeSO description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(String description) {
    this.description = description;
  }


  public NodeSO extra(Object extra) {
    
    this.extra = extra;
    return this;
  }

   /**
   * Get extra
   * @return extra
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTRA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getExtra() {
    return extra;
  }


  @JsonProperty(JSON_PROPERTY_EXTRA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtra(Object extra) {
    this.extra = extra;
  }


  public NodeSO icon(String icon) {
    
    this.icon = icon;
    return this;
  }

   /**
   * Get icon
   * @return icon
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ICON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getIcon() {
    return icon;
  }


  @JsonProperty(JSON_PROPERTY_ICON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIcon(String icon) {
    this.icon = icon;
  }


  public NodeSO id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public NodeSO isGhostNode(Boolean isGhostNode) {
    
    this.isGhostNode = isGhostNode;
    return this;
  }

   /**
   * Get isGhostNode
   * @return isGhostNode
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_GHOST_NODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsGhostNode() {
    return isGhostNode;
  }


  @JsonProperty(JSON_PROPERTY_IS_GHOST_NODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsGhostNode(Boolean isGhostNode) {
    this.isGhostNode = isGhostNode;
  }


  public NodeSO name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public NodeSO nodeFavorite(Boolean nodeFavorite) {
    
    this.nodeFavorite = nodeFavorite;
    return this;
  }

   /**
   * Get nodeFavorite
   * @return nodeFavorite
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NODE_FAVORITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getNodeFavorite() {
    return nodeFavorite;
  }


  @JsonProperty(JSON_PROPERTY_NODE_FAVORITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNodeFavorite(Boolean nodeFavorite) {
    this.nodeFavorite = nodeFavorite;
  }


  public NodeSO nodePermitSet(Boolean nodePermitSet) {
    
    this.nodePermitSet = nodePermitSet;
    return this;
  }

   /**
   * Get nodePermitSet
   * @return nodePermitSet
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NODE_PERMIT_SET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getNodePermitSet() {
    return nodePermitSet;
  }


  @JsonProperty(JSON_PROPERTY_NODE_PERMIT_SET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNodePermitSet(Boolean nodePermitSet) {
    this.nodePermitSet = nodePermitSet;
  }


  public NodeSO nodeShared(Boolean nodeShared) {
    
    this.nodeShared = nodeShared;
    return this;
  }

   /**
   * Get nodeShared
   * @return nodeShared
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NODE_SHARED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getNodeShared() {
    return nodeShared;
  }


  @JsonProperty(JSON_PROPERTY_NODE_SHARED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNodeShared(Boolean nodeShared) {
    this.nodeShared = nodeShared;
  }


  public NodeSO parentId(String parentId) {
    
    this.parentId = parentId;
    return this;
  }

   /**
   * Get parentId
   * @return parentId
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PARENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getParentId() {
    return parentId;
  }


  @JsonProperty(JSON_PROPERTY_PARENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setParentId(String parentId) {
    this.parentId = parentId;
  }


  public NodeSO permissions(NodePermissionStateSO permissions) {
    
    this.permissions = permissions;
    return this;
  }

   /**
   * Get permissions
   * @return permissions
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PERMISSIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public NodePermissionStateSO getPermissions() {
    return permissions;
  }


  @JsonProperty(JSON_PROPERTY_PERMISSIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPermissions(NodePermissionStateSO permissions) {
    this.permissions = permissions;
  }


  public NodeSO revision(Integer revision) {
    
    this.revision = revision;
    return this;
  }

   /**
   * Get revision
   * minimum: 0
   * @return revision
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REVISION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getRevision() {
    return revision;
  }


  @JsonProperty(JSON_PROPERTY_REVISION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRevision(Integer revision) {
    this.revision = revision;
  }


  public NodeSO role(String role) {
    
    this.role = role;
    return this;
  }

   /**
   * Get role
   * @return role
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ROLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRole() {
    return role;
  }


  @JsonProperty(JSON_PROPERTY_ROLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRole(String role) {
    this.role = role;
  }


  public NodeSO spaceId(String spaceId) {
    
    this.spaceId = spaceId;
    return this;
  }

   /**
   * Get spaceId
   * @return spaceId
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SPACE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSpaceId() {
    return spaceId;
  }


  @JsonProperty(JSON_PROPERTY_SPACE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSpaceId(String spaceId) {
    this.spaceId = spaceId;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NodeSO nodeSO = (NodeSO) o;
    return Objects.equals(this.activeView, nodeSO.activeView) &&
        Objects.equals(this.description, nodeSO.description) &&
        Objects.equals(this.extra, nodeSO.extra) &&
        Objects.equals(this.icon, nodeSO.icon) &&
        Objects.equals(this.id, nodeSO.id) &&
        Objects.equals(this.isGhostNode, nodeSO.isGhostNode) &&
        Objects.equals(this.name, nodeSO.name) &&
        Objects.equals(this.nodeFavorite, nodeSO.nodeFavorite) &&
        Objects.equals(this.nodePermitSet, nodeSO.nodePermitSet) &&
        Objects.equals(this.nodeShared, nodeSO.nodeShared) &&
        Objects.equals(this.parentId, nodeSO.parentId) &&
        Objects.equals(this.permissions, nodeSO.permissions) &&
        Objects.equals(this.revision, nodeSO.revision) &&
        Objects.equals(this.role, nodeSO.role) &&
        Objects.equals(this.spaceId, nodeSO.spaceId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activeView, description, extra, icon, id, isGhostNode, name, nodeFavorite, nodePermitSet, nodeShared, parentId, permissions, revision, role, spaceId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NodeSO {\n");
    sb.append("    activeView: ").append(toIndentedString(activeView)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    extra: ").append(toIndentedString(extra)).append("\n");
    sb.append("    icon: ").append(toIndentedString(icon)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isGhostNode: ").append(toIndentedString(isGhostNode)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nodeFavorite: ").append(toIndentedString(nodeFavorite)).append("\n");
    sb.append("    nodePermitSet: ").append(toIndentedString(nodePermitSet)).append("\n");
    sb.append("    nodeShared: ").append(toIndentedString(nodeShared)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    permissions: ").append(toIndentedString(permissions)).append("\n");
    sb.append("    revision: ").append(toIndentedString(revision)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    spaceId: ").append(toIndentedString(spaceId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

