/*
 * databus-server
 * databus-server APIs
 *
 * The version of the OpenAPI document: 1.6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.apitable.starter.databus.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.apitable.starter.databus.client.model.AnyBaseField;
import com.apitable.starter.databus.client.model.GanttColorOption;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ViewStyleSo
 */
@JsonPropertyOrder({
  ViewStyleSo.JSON_PROPERTY_AUTO_TASK_LAYOUT,
  ViewStyleSo.JSON_PROPERTY_CARD_COUNT,
  ViewStyleSo.JSON_PROPERTY_COLOR_OPTION,
  ViewStyleSo.JSON_PROPERTY_COVER_FIELD_ID,
  ViewStyleSo.JSON_PROPERTY_END_FIELD_ID,
  ViewStyleSo.JSON_PROPERTY_HIDDEN_GROUP_MAP,
  ViewStyleSo.JSON_PROPERTY_HORIZONTAL,
  ViewStyleSo.JSON_PROPERTY_IS_AUTO_LAYOUT,
  ViewStyleSo.JSON_PROPERTY_IS_COL_NAME_VISIBLE,
  ViewStyleSo.JSON_PROPERTY_IS_COVER_FIT,
  ViewStyleSo.JSON_PROPERTY_KANBAN_FIELD_ID,
  ViewStyleSo.JSON_PROPERTY_LAYOUT_TYPE,
  ViewStyleSo.JSON_PROPERTY_LINK_FIELD_ID,
  ViewStyleSo.JSON_PROPERTY_ONLY_CALC_WORK_DAY,
  ViewStyleSo.JSON_PROPERTY_START_FIELD_ID,
  ViewStyleSo.JSON_PROPERTY_WORK_DAYS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ViewStyleSo {
  public static final String JSON_PROPERTY_AUTO_TASK_LAYOUT = "autoTaskLayout";
  private JsonNullable<Boolean> autoTaskLayout = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_CARD_COUNT = "cardCount";
  private JsonNullable<Integer> cardCount = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_COLOR_OPTION = "colorOption";
  private JsonNullable<GanttColorOption> colorOption = JsonNullable.<GanttColorOption>undefined();

  public static final String JSON_PROPERTY_COVER_FIELD_ID = "coverFieldId";
  private JsonNullable<String> coverFieldId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_END_FIELD_ID = "endFieldId";
  private JsonNullable<String> endFieldId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_HIDDEN_GROUP_MAP = "hiddenGroupMap";
  private JsonNullable<Map<String, Boolean>> hiddenGroupMap = JsonNullable.<Map<String, Boolean>>undefined();

  public static final String JSON_PROPERTY_HORIZONTAL = "horizontal";
  private JsonNullable<Boolean> horizontal = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_IS_AUTO_LAYOUT = "isAutoLayout";
  private JsonNullable<Boolean> isAutoLayout = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_IS_COL_NAME_VISIBLE = "isColNameVisible";
  private JsonNullable<Boolean> isColNameVisible = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_IS_COVER_FIT = "isCoverFit";
  private JsonNullable<Boolean> isCoverFit = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_KANBAN_FIELD_ID = "kanbanFieldId";
  private JsonNullable<String> kanbanFieldId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LAYOUT_TYPE = "layoutType";
  private JsonNullable<AnyBaseField> layoutType = JsonNullable.<AnyBaseField>undefined();

  public static final String JSON_PROPERTY_LINK_FIELD_ID = "linkFieldId";
  private JsonNullable<String> linkFieldId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ONLY_CALC_WORK_DAY = "onlyCalcWorkDay";
  private JsonNullable<Boolean> onlyCalcWorkDay = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_START_FIELD_ID = "startFieldId";
  private JsonNullable<String> startFieldId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_WORK_DAYS = "workDays";
  private JsonNullable<List<Integer>> workDays = JsonNullable.<List<Integer>>undefined();

  public ViewStyleSo() {
  }

  public ViewStyleSo autoTaskLayout(Boolean autoTaskLayout) {
    this.autoTaskLayout = JsonNullable.<Boolean>of(autoTaskLayout);
    
    return this;
  }

   /**
   * Get autoTaskLayout
   * @return autoTaskLayout
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Boolean getAutoTaskLayout() {
        return autoTaskLayout.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUTO_TASK_LAYOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getAutoTaskLayout_JsonNullable() {
    return autoTaskLayout;
  }
  
  @JsonProperty(JSON_PROPERTY_AUTO_TASK_LAYOUT)
  public void setAutoTaskLayout_JsonNullable(JsonNullable<Boolean> autoTaskLayout) {
    this.autoTaskLayout = autoTaskLayout;
  }

  public void setAutoTaskLayout(Boolean autoTaskLayout) {
    this.autoTaskLayout = JsonNullable.<Boolean>of(autoTaskLayout);
  }


  public ViewStyleSo cardCount(Integer cardCount) {
    this.cardCount = JsonNullable.<Integer>of(cardCount);
    
    return this;
  }

   /**
   * Get cardCount
   * @return cardCount
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Integer getCardCount() {
        return cardCount.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CARD_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getCardCount_JsonNullable() {
    return cardCount;
  }
  
  @JsonProperty(JSON_PROPERTY_CARD_COUNT)
  public void setCardCount_JsonNullable(JsonNullable<Integer> cardCount) {
    this.cardCount = cardCount;
  }

  public void setCardCount(Integer cardCount) {
    this.cardCount = JsonNullable.<Integer>of(cardCount);
  }


  public ViewStyleSo colorOption(GanttColorOption colorOption) {
    this.colorOption = JsonNullable.<GanttColorOption>of(colorOption);
    
    return this;
  }

   /**
   * Get colorOption
   * @return colorOption
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public GanttColorOption getColorOption() {
        return colorOption.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COLOR_OPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<GanttColorOption> getColorOption_JsonNullable() {
    return colorOption;
  }
  
  @JsonProperty(JSON_PROPERTY_COLOR_OPTION)
  public void setColorOption_JsonNullable(JsonNullable<GanttColorOption> colorOption) {
    this.colorOption = colorOption;
  }

  public void setColorOption(GanttColorOption colorOption) {
    this.colorOption = JsonNullable.<GanttColorOption>of(colorOption);
  }


  public ViewStyleSo coverFieldId(String coverFieldId) {
    this.coverFieldId = JsonNullable.<String>of(coverFieldId);
    
    return this;
  }

   /**
   * Get coverFieldId
   * @return coverFieldId
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getCoverFieldId() {
        return coverFieldId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COVER_FIELD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCoverFieldId_JsonNullable() {
    return coverFieldId;
  }
  
  @JsonProperty(JSON_PROPERTY_COVER_FIELD_ID)
  public void setCoverFieldId_JsonNullable(JsonNullable<String> coverFieldId) {
    this.coverFieldId = coverFieldId;
  }

  public void setCoverFieldId(String coverFieldId) {
    this.coverFieldId = JsonNullable.<String>of(coverFieldId);
  }


  public ViewStyleSo endFieldId(String endFieldId) {
    this.endFieldId = JsonNullable.<String>of(endFieldId);
    
    return this;
  }

   /**
   * Get endFieldId
   * @return endFieldId
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getEndFieldId() {
        return endFieldId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_END_FIELD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEndFieldId_JsonNullable() {
    return endFieldId;
  }
  
  @JsonProperty(JSON_PROPERTY_END_FIELD_ID)
  public void setEndFieldId_JsonNullable(JsonNullable<String> endFieldId) {
    this.endFieldId = endFieldId;
  }

  public void setEndFieldId(String endFieldId) {
    this.endFieldId = JsonNullable.<String>of(endFieldId);
  }


  public ViewStyleSo hiddenGroupMap(Map<String, Boolean> hiddenGroupMap) {
    this.hiddenGroupMap = JsonNullable.<Map<String, Boolean>>of(hiddenGroupMap);
    
    return this;
  }

  public ViewStyleSo putHiddenGroupMapItem(String key, Boolean hiddenGroupMapItem) {
    if (this.hiddenGroupMap == null || !this.hiddenGroupMap.isPresent()) {
      this.hiddenGroupMap = JsonNullable.<Map<String, Boolean>>of(new HashMap<>());
    }
    try {
      this.hiddenGroupMap.get().put(key, hiddenGroupMapItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get hiddenGroupMap
   * @return hiddenGroupMap
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Map<String, Boolean> getHiddenGroupMap() {
        return hiddenGroupMap.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HIDDEN_GROUP_MAP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Map<String, Boolean>> getHiddenGroupMap_JsonNullable() {
    return hiddenGroupMap;
  }
  
  @JsonProperty(JSON_PROPERTY_HIDDEN_GROUP_MAP)
  public void setHiddenGroupMap_JsonNullable(JsonNullable<Map<String, Boolean>> hiddenGroupMap) {
    this.hiddenGroupMap = hiddenGroupMap;
  }

  public void setHiddenGroupMap(Map<String, Boolean> hiddenGroupMap) {
    this.hiddenGroupMap = JsonNullable.<Map<String, Boolean>>of(hiddenGroupMap);
  }


  public ViewStyleSo horizontal(Boolean horizontal) {
    this.horizontal = JsonNullable.<Boolean>of(horizontal);
    
    return this;
  }

   /**
   * Get horizontal
   * @return horizontal
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Boolean getHorizontal() {
        return horizontal.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HORIZONTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getHorizontal_JsonNullable() {
    return horizontal;
  }
  
  @JsonProperty(JSON_PROPERTY_HORIZONTAL)
  public void setHorizontal_JsonNullable(JsonNullable<Boolean> horizontal) {
    this.horizontal = horizontal;
  }

  public void setHorizontal(Boolean horizontal) {
    this.horizontal = JsonNullable.<Boolean>of(horizontal);
  }


  public ViewStyleSo isAutoLayout(Boolean isAutoLayout) {
    this.isAutoLayout = JsonNullable.<Boolean>of(isAutoLayout);
    
    return this;
  }

   /**
   * Get isAutoLayout
   * @return isAutoLayout
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Boolean getIsAutoLayout() {
        return isAutoLayout.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IS_AUTO_LAYOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getIsAutoLayout_JsonNullable() {
    return isAutoLayout;
  }
  
  @JsonProperty(JSON_PROPERTY_IS_AUTO_LAYOUT)
  public void setIsAutoLayout_JsonNullable(JsonNullable<Boolean> isAutoLayout) {
    this.isAutoLayout = isAutoLayout;
  }

  public void setIsAutoLayout(Boolean isAutoLayout) {
    this.isAutoLayout = JsonNullable.<Boolean>of(isAutoLayout);
  }


  public ViewStyleSo isColNameVisible(Boolean isColNameVisible) {
    this.isColNameVisible = JsonNullable.<Boolean>of(isColNameVisible);
    
    return this;
  }

   /**
   * Get isColNameVisible
   * @return isColNameVisible
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Boolean getIsColNameVisible() {
        return isColNameVisible.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IS_COL_NAME_VISIBLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getIsColNameVisible_JsonNullable() {
    return isColNameVisible;
  }
  
  @JsonProperty(JSON_PROPERTY_IS_COL_NAME_VISIBLE)
  public void setIsColNameVisible_JsonNullable(JsonNullable<Boolean> isColNameVisible) {
    this.isColNameVisible = isColNameVisible;
  }

  public void setIsColNameVisible(Boolean isColNameVisible) {
    this.isColNameVisible = JsonNullable.<Boolean>of(isColNameVisible);
  }


  public ViewStyleSo isCoverFit(Boolean isCoverFit) {
    this.isCoverFit = JsonNullable.<Boolean>of(isCoverFit);
    
    return this;
  }

   /**
   * Get isCoverFit
   * @return isCoverFit
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Boolean getIsCoverFit() {
        return isCoverFit.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IS_COVER_FIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getIsCoverFit_JsonNullable() {
    return isCoverFit;
  }
  
  @JsonProperty(JSON_PROPERTY_IS_COVER_FIT)
  public void setIsCoverFit_JsonNullable(JsonNullable<Boolean> isCoverFit) {
    this.isCoverFit = isCoverFit;
  }

  public void setIsCoverFit(Boolean isCoverFit) {
    this.isCoverFit = JsonNullable.<Boolean>of(isCoverFit);
  }


  public ViewStyleSo kanbanFieldId(String kanbanFieldId) {
    this.kanbanFieldId = JsonNullable.<String>of(kanbanFieldId);
    
    return this;
  }

   /**
   * Get kanbanFieldId
   * @return kanbanFieldId
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getKanbanFieldId() {
        return kanbanFieldId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_KANBAN_FIELD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getKanbanFieldId_JsonNullable() {
    return kanbanFieldId;
  }
  
  @JsonProperty(JSON_PROPERTY_KANBAN_FIELD_ID)
  public void setKanbanFieldId_JsonNullable(JsonNullable<String> kanbanFieldId) {
    this.kanbanFieldId = kanbanFieldId;
  }

  public void setKanbanFieldId(String kanbanFieldId) {
    this.kanbanFieldId = JsonNullable.<String>of(kanbanFieldId);
  }


  public ViewStyleSo layoutType(AnyBaseField layoutType) {
    this.layoutType = JsonNullable.<AnyBaseField>of(layoutType);
    
    return this;
  }

   /**
   * Get layoutType
   * @return layoutType
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public AnyBaseField getLayoutType() {
        return layoutType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LAYOUT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<AnyBaseField> getLayoutType_JsonNullable() {
    return layoutType;
  }
  
  @JsonProperty(JSON_PROPERTY_LAYOUT_TYPE)
  public void setLayoutType_JsonNullable(JsonNullable<AnyBaseField> layoutType) {
    this.layoutType = layoutType;
  }

  public void setLayoutType(AnyBaseField layoutType) {
    this.layoutType = JsonNullable.<AnyBaseField>of(layoutType);
  }


  public ViewStyleSo linkFieldId(String linkFieldId) {
    this.linkFieldId = JsonNullable.<String>of(linkFieldId);
    
    return this;
  }

   /**
   * Get linkFieldId
   * @return linkFieldId
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getLinkFieldId() {
        return linkFieldId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LINK_FIELD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLinkFieldId_JsonNullable() {
    return linkFieldId;
  }
  
  @JsonProperty(JSON_PROPERTY_LINK_FIELD_ID)
  public void setLinkFieldId_JsonNullable(JsonNullable<String> linkFieldId) {
    this.linkFieldId = linkFieldId;
  }

  public void setLinkFieldId(String linkFieldId) {
    this.linkFieldId = JsonNullable.<String>of(linkFieldId);
  }


  public ViewStyleSo onlyCalcWorkDay(Boolean onlyCalcWorkDay) {
    this.onlyCalcWorkDay = JsonNullable.<Boolean>of(onlyCalcWorkDay);
    
    return this;
  }

   /**
   * Get onlyCalcWorkDay
   * @return onlyCalcWorkDay
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Boolean getOnlyCalcWorkDay() {
        return onlyCalcWorkDay.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ONLY_CALC_WORK_DAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getOnlyCalcWorkDay_JsonNullable() {
    return onlyCalcWorkDay;
  }
  
  @JsonProperty(JSON_PROPERTY_ONLY_CALC_WORK_DAY)
  public void setOnlyCalcWorkDay_JsonNullable(JsonNullable<Boolean> onlyCalcWorkDay) {
    this.onlyCalcWorkDay = onlyCalcWorkDay;
  }

  public void setOnlyCalcWorkDay(Boolean onlyCalcWorkDay) {
    this.onlyCalcWorkDay = JsonNullable.<Boolean>of(onlyCalcWorkDay);
  }


  public ViewStyleSo startFieldId(String startFieldId) {
    this.startFieldId = JsonNullable.<String>of(startFieldId);
    
    return this;
  }

   /**
   * Get startFieldId
   * @return startFieldId
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getStartFieldId() {
        return startFieldId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_START_FIELD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getStartFieldId_JsonNullable() {
    return startFieldId;
  }
  
  @JsonProperty(JSON_PROPERTY_START_FIELD_ID)
  public void setStartFieldId_JsonNullable(JsonNullable<String> startFieldId) {
    this.startFieldId = startFieldId;
  }

  public void setStartFieldId(String startFieldId) {
    this.startFieldId = JsonNullable.<String>of(startFieldId);
  }


  public ViewStyleSo workDays(List<Integer> workDays) {
    this.workDays = JsonNullable.<List<Integer>>of(workDays);
    
    return this;
  }

  public ViewStyleSo addWorkDaysItem(Integer workDaysItem) {
    if (this.workDays == null || !this.workDays.isPresent()) {
      this.workDays = JsonNullable.<List<Integer>>of(new ArrayList<>());
    }
    try {
      this.workDays.get().add(workDaysItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get workDays
   * @return workDays
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public List<Integer> getWorkDays() {
        return workDays.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WORK_DAYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Integer>> getWorkDays_JsonNullable() {
    return workDays;
  }
  
  @JsonProperty(JSON_PROPERTY_WORK_DAYS)
  public void setWorkDays_JsonNullable(JsonNullable<List<Integer>> workDays) {
    this.workDays = workDays;
  }

  public void setWorkDays(List<Integer> workDays) {
    this.workDays = JsonNullable.<List<Integer>>of(workDays);
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ViewStyleSo viewStyleSo = (ViewStyleSo) o;
    return equalsNullable(this.autoTaskLayout, viewStyleSo.autoTaskLayout) &&
        equalsNullable(this.cardCount, viewStyleSo.cardCount) &&
        equalsNullable(this.colorOption, viewStyleSo.colorOption) &&
        equalsNullable(this.coverFieldId, viewStyleSo.coverFieldId) &&
        equalsNullable(this.endFieldId, viewStyleSo.endFieldId) &&
        equalsNullable(this.hiddenGroupMap, viewStyleSo.hiddenGroupMap) &&
        equalsNullable(this.horizontal, viewStyleSo.horizontal) &&
        equalsNullable(this.isAutoLayout, viewStyleSo.isAutoLayout) &&
        equalsNullable(this.isColNameVisible, viewStyleSo.isColNameVisible) &&
        equalsNullable(this.isCoverFit, viewStyleSo.isCoverFit) &&
        equalsNullable(this.kanbanFieldId, viewStyleSo.kanbanFieldId) &&
        equalsNullable(this.layoutType, viewStyleSo.layoutType) &&
        equalsNullable(this.linkFieldId, viewStyleSo.linkFieldId) &&
        equalsNullable(this.onlyCalcWorkDay, viewStyleSo.onlyCalcWorkDay) &&
        equalsNullable(this.startFieldId, viewStyleSo.startFieldId) &&
        equalsNullable(this.workDays, viewStyleSo.workDays);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(autoTaskLayout), hashCodeNullable(cardCount), hashCodeNullable(colorOption), hashCodeNullable(coverFieldId), hashCodeNullable(endFieldId), hashCodeNullable(hiddenGroupMap), hashCodeNullable(horizontal), hashCodeNullable(isAutoLayout), hashCodeNullable(isColNameVisible), hashCodeNullable(isCoverFit), hashCodeNullable(kanbanFieldId), hashCodeNullable(layoutType), hashCodeNullable(linkFieldId), hashCodeNullable(onlyCalcWorkDay), hashCodeNullable(startFieldId), hashCodeNullable(workDays));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ViewStyleSo {\n");
    sb.append("    autoTaskLayout: ").append(toIndentedString(autoTaskLayout)).append("\n");
    sb.append("    cardCount: ").append(toIndentedString(cardCount)).append("\n");
    sb.append("    colorOption: ").append(toIndentedString(colorOption)).append("\n");
    sb.append("    coverFieldId: ").append(toIndentedString(coverFieldId)).append("\n");
    sb.append("    endFieldId: ").append(toIndentedString(endFieldId)).append("\n");
    sb.append("    hiddenGroupMap: ").append(toIndentedString(hiddenGroupMap)).append("\n");
    sb.append("    horizontal: ").append(toIndentedString(horizontal)).append("\n");
    sb.append("    isAutoLayout: ").append(toIndentedString(isAutoLayout)).append("\n");
    sb.append("    isColNameVisible: ").append(toIndentedString(isColNameVisible)).append("\n");
    sb.append("    isCoverFit: ").append(toIndentedString(isCoverFit)).append("\n");
    sb.append("    kanbanFieldId: ").append(toIndentedString(kanbanFieldId)).append("\n");
    sb.append("    layoutType: ").append(toIndentedString(layoutType)).append("\n");
    sb.append("    linkFieldId: ").append(toIndentedString(linkFieldId)).append("\n");
    sb.append("    onlyCalcWorkDay: ").append(toIndentedString(onlyCalcWorkDay)).append("\n");
    sb.append("    startFieldId: ").append(toIndentedString(startFieldId)).append("\n");
    sb.append("    workDays: ").append(toIndentedString(workDays)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

