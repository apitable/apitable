/*
 * databus-server
 * databus-server APIs
 *
 * The version of the OpenAPI document: 1.6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.apitable.starter.databus.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.apitable.starter.databus.client.model.IFilterInfo;
import com.apitable.starter.databus.client.model.ISortInfo;
import com.apitable.starter.databus.client.model.ISortedField;
import com.apitable.starter.databus.client.model.IViewLockInfo;
import com.apitable.starter.databus.client.model.ViewColumnSO;
import com.apitable.starter.databus.client.model.ViewRowSO;
import com.apitable.starter.databus.client.model.ViewStyleSo;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ViewSO
 */
@JsonPropertyOrder({
  ViewSO.JSON_PROPERTY_AUTO_HEAD_HEIGHT,
  ViewSO.JSON_PROPERTY_AUTO_SAVE,
  ViewSO.JSON_PROPERTY_COLUMNS,
  ViewSO.JSON_PROPERTY_DESCRIPTION,
  ViewSO.JSON_PROPERTY_DISPLAY_HIDDEN_COLUMN_WITHIN_MIRROR,
  ViewSO.JSON_PROPERTY_FILTER_INFO,
  ViewSO.JSON_PROPERTY_FROZEN_COLUMN_COUNT,
  ViewSO.JSON_PROPERTY_GROUP_INFO,
  ViewSO.JSON_PROPERTY_HIDDEN,
  ViewSO.JSON_PROPERTY_ID,
  ViewSO.JSON_PROPERTY_LOCK_INFO,
  ViewSO.JSON_PROPERTY_NAME,
  ViewSO.JSON_PROPERTY_ROW_HEIGHT_LEVEL,
  ViewSO.JSON_PROPERTY_ROWS,
  ViewSO.JSON_PROPERTY_SORT_INFO,
  ViewSO.JSON_PROPERTY_STYLE,
  ViewSO.JSON_PROPERTY_TYPE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ViewSO {
  public static final String JSON_PROPERTY_AUTO_HEAD_HEIGHT = "autoHeadHeight";
  private JsonNullable<Boolean> autoHeadHeight = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_AUTO_SAVE = "autoSave";
  private JsonNullable<Boolean> autoSave = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_COLUMNS = "columns";
  private List<ViewColumnSO> columns = new ArrayList<>();

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private JsonNullable<String> description = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DISPLAY_HIDDEN_COLUMN_WITHIN_MIRROR = "displayHiddenColumnWithinMirror";
  private JsonNullable<Boolean> displayHiddenColumnWithinMirror = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_FILTER_INFO = "filterInfo";
  private JsonNullable<IFilterInfo> filterInfo = JsonNullable.<IFilterInfo>undefined();

  public static final String JSON_PROPERTY_FROZEN_COLUMN_COUNT = "frozenColumnCount";
  private JsonNullable<Integer> frozenColumnCount = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_GROUP_INFO = "groupInfo";
  private JsonNullable<List<ISortedField>> groupInfo = JsonNullable.<List<ISortedField>>undefined();

  public static final String JSON_PROPERTY_HIDDEN = "hidden";
  private JsonNullable<Boolean> hidden = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_ID = "id";
  private JsonNullable<String> id = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCK_INFO = "lockInfo";
  private JsonNullable<IViewLockInfo> lockInfo = JsonNullable.<IViewLockInfo>undefined();

  public static final String JSON_PROPERTY_NAME = "name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ROW_HEIGHT_LEVEL = "rowHeightLevel";
  private JsonNullable<Integer> rowHeightLevel = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_ROWS = "rows";
  private JsonNullable<List<ViewRowSO>> rows = JsonNullable.<List<ViewRowSO>>undefined();

  public static final String JSON_PROPERTY_SORT_INFO = "sortInfo";
  private JsonNullable<ISortInfo> sortInfo = JsonNullable.<ISortInfo>undefined();

  public static final String JSON_PROPERTY_STYLE = "style";
  private JsonNullable<ViewStyleSo> style = JsonNullable.<ViewStyleSo>undefined();

  public static final String JSON_PROPERTY_TYPE = "type";
  private JsonNullable<Long> type = JsonNullable.<Long>undefined();

  public ViewSO() {
  }

  public ViewSO autoHeadHeight(Boolean autoHeadHeight) {
    this.autoHeadHeight = JsonNullable.<Boolean>of(autoHeadHeight);
    
    return this;
  }

   /**
   * Get autoHeadHeight
   * @return autoHeadHeight
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Boolean getAutoHeadHeight() {
        return autoHeadHeight.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUTO_HEAD_HEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getAutoHeadHeight_JsonNullable() {
    return autoHeadHeight;
  }
  
  @JsonProperty(JSON_PROPERTY_AUTO_HEAD_HEIGHT)
  public void setAutoHeadHeight_JsonNullable(JsonNullable<Boolean> autoHeadHeight) {
    this.autoHeadHeight = autoHeadHeight;
  }

  public void setAutoHeadHeight(Boolean autoHeadHeight) {
    this.autoHeadHeight = JsonNullable.<Boolean>of(autoHeadHeight);
  }


  public ViewSO autoSave(Boolean autoSave) {
    this.autoSave = JsonNullable.<Boolean>of(autoSave);
    
    return this;
  }

   /**
   * Get autoSave
   * @return autoSave
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Boolean getAutoSave() {
        return autoSave.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUTO_SAVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getAutoSave_JsonNullable() {
    return autoSave;
  }
  
  @JsonProperty(JSON_PROPERTY_AUTO_SAVE)
  public void setAutoSave_JsonNullable(JsonNullable<Boolean> autoSave) {
    this.autoSave = autoSave;
  }

  public void setAutoSave(Boolean autoSave) {
    this.autoSave = JsonNullable.<Boolean>of(autoSave);
  }


  public ViewSO columns(List<ViewColumnSO> columns) {
    
    this.columns = columns;
    return this;
  }

  public ViewSO addColumnsItem(ViewColumnSO columnsItem) {
    if (this.columns == null) {
      this.columns = new ArrayList<>();
    }
    this.columns.add(columnsItem);
    return this;
  }

   /**
   * Get columns
   * @return columns
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_COLUMNS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<ViewColumnSO> getColumns() {
    return columns;
  }


  @JsonProperty(JSON_PROPERTY_COLUMNS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setColumns(List<ViewColumnSO> columns) {
    this.columns = columns;
  }


  public ViewSO description(String description) {
    this.description = JsonNullable.<String>of(description);
    
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getDescription() {
        return description.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescription_JsonNullable() {
    return description;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  public void setDescription_JsonNullable(JsonNullable<String> description) {
    this.description = description;
  }

  public void setDescription(String description) {
    this.description = JsonNullable.<String>of(description);
  }


  public ViewSO displayHiddenColumnWithinMirror(Boolean displayHiddenColumnWithinMirror) {
    this.displayHiddenColumnWithinMirror = JsonNullable.<Boolean>of(displayHiddenColumnWithinMirror);
    
    return this;
  }

   /**
   * Get displayHiddenColumnWithinMirror
   * @return displayHiddenColumnWithinMirror
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Boolean getDisplayHiddenColumnWithinMirror() {
        return displayHiddenColumnWithinMirror.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DISPLAY_HIDDEN_COLUMN_WITHIN_MIRROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getDisplayHiddenColumnWithinMirror_JsonNullable() {
    return displayHiddenColumnWithinMirror;
  }
  
  @JsonProperty(JSON_PROPERTY_DISPLAY_HIDDEN_COLUMN_WITHIN_MIRROR)
  public void setDisplayHiddenColumnWithinMirror_JsonNullable(JsonNullable<Boolean> displayHiddenColumnWithinMirror) {
    this.displayHiddenColumnWithinMirror = displayHiddenColumnWithinMirror;
  }

  public void setDisplayHiddenColumnWithinMirror(Boolean displayHiddenColumnWithinMirror) {
    this.displayHiddenColumnWithinMirror = JsonNullable.<Boolean>of(displayHiddenColumnWithinMirror);
  }


  public ViewSO filterInfo(IFilterInfo filterInfo) {
    this.filterInfo = JsonNullable.<IFilterInfo>of(filterInfo);
    
    return this;
  }

   /**
   * Get filterInfo
   * @return filterInfo
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public IFilterInfo getFilterInfo() {
        return filterInfo.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FILTER_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<IFilterInfo> getFilterInfo_JsonNullable() {
    return filterInfo;
  }
  
  @JsonProperty(JSON_PROPERTY_FILTER_INFO)
  public void setFilterInfo_JsonNullable(JsonNullable<IFilterInfo> filterInfo) {
    this.filterInfo = filterInfo;
  }

  public void setFilterInfo(IFilterInfo filterInfo) {
    this.filterInfo = JsonNullable.<IFilterInfo>of(filterInfo);
  }


  public ViewSO frozenColumnCount(Integer frozenColumnCount) {
    this.frozenColumnCount = JsonNullable.<Integer>of(frozenColumnCount);
    
    return this;
  }

   /**
   * Get frozenColumnCount
   * @return frozenColumnCount
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Integer getFrozenColumnCount() {
        return frozenColumnCount.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FROZEN_COLUMN_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getFrozenColumnCount_JsonNullable() {
    return frozenColumnCount;
  }
  
  @JsonProperty(JSON_PROPERTY_FROZEN_COLUMN_COUNT)
  public void setFrozenColumnCount_JsonNullable(JsonNullable<Integer> frozenColumnCount) {
    this.frozenColumnCount = frozenColumnCount;
  }

  public void setFrozenColumnCount(Integer frozenColumnCount) {
    this.frozenColumnCount = JsonNullable.<Integer>of(frozenColumnCount);
  }


  public ViewSO groupInfo(List<ISortedField> groupInfo) {
    this.groupInfo = JsonNullable.<List<ISortedField>>of(groupInfo);
    
    return this;
  }

  public ViewSO addGroupInfoItem(ISortedField groupInfoItem) {
    if (this.groupInfo == null || !this.groupInfo.isPresent()) {
      this.groupInfo = JsonNullable.<List<ISortedField>>of(new ArrayList<>());
    }
    try {
      this.groupInfo.get().add(groupInfoItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get groupInfo
   * @return groupInfo
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public List<ISortedField> getGroupInfo() {
        return groupInfo.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GROUP_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<ISortedField>> getGroupInfo_JsonNullable() {
    return groupInfo;
  }
  
  @JsonProperty(JSON_PROPERTY_GROUP_INFO)
  public void setGroupInfo_JsonNullable(JsonNullable<List<ISortedField>> groupInfo) {
    this.groupInfo = groupInfo;
  }

  public void setGroupInfo(List<ISortedField> groupInfo) {
    this.groupInfo = JsonNullable.<List<ISortedField>>of(groupInfo);
  }


  public ViewSO hidden(Boolean hidden) {
    this.hidden = JsonNullable.<Boolean>of(hidden);
    
    return this;
  }

   /**
   * Get hidden
   * @return hidden
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Boolean getHidden() {
        return hidden.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HIDDEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getHidden_JsonNullable() {
    return hidden;
  }
  
  @JsonProperty(JSON_PROPERTY_HIDDEN)
  public void setHidden_JsonNullable(JsonNullable<Boolean> hidden) {
    this.hidden = hidden;
  }

  public void setHidden(Boolean hidden) {
    this.hidden = JsonNullable.<Boolean>of(hidden);
  }


  public ViewSO id(String id) {
    this.id = JsonNullable.<String>of(id);
    
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getId() {
        return id.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getId_JsonNullable() {
    return id;
  }
  
  @JsonProperty(JSON_PROPERTY_ID)
  public void setId_JsonNullable(JsonNullable<String> id) {
    this.id = id;
  }

  public void setId(String id) {
    this.id = JsonNullable.<String>of(id);
  }


  public ViewSO lockInfo(IViewLockInfo lockInfo) {
    this.lockInfo = JsonNullable.<IViewLockInfo>of(lockInfo);
    
    return this;
  }

   /**
   * Get lockInfo
   * @return lockInfo
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public IViewLockInfo getLockInfo() {
        return lockInfo.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCK_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<IViewLockInfo> getLockInfo_JsonNullable() {
    return lockInfo;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCK_INFO)
  public void setLockInfo_JsonNullable(JsonNullable<IViewLockInfo> lockInfo) {
    this.lockInfo = lockInfo;
  }

  public void setLockInfo(IViewLockInfo lockInfo) {
    this.lockInfo = JsonNullable.<IViewLockInfo>of(lockInfo);
  }


  public ViewSO name(String name) {
    this.name = JsonNullable.<String>of(name);
    
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(String name) {
    this.name = JsonNullable.<String>of(name);
  }


  public ViewSO rowHeightLevel(Integer rowHeightLevel) {
    this.rowHeightLevel = JsonNullable.<Integer>of(rowHeightLevel);
    
    return this;
  }

   /**
   * Get rowHeightLevel
   * @return rowHeightLevel
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Integer getRowHeightLevel() {
        return rowHeightLevel.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ROW_HEIGHT_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getRowHeightLevel_JsonNullable() {
    return rowHeightLevel;
  }
  
  @JsonProperty(JSON_PROPERTY_ROW_HEIGHT_LEVEL)
  public void setRowHeightLevel_JsonNullable(JsonNullable<Integer> rowHeightLevel) {
    this.rowHeightLevel = rowHeightLevel;
  }

  public void setRowHeightLevel(Integer rowHeightLevel) {
    this.rowHeightLevel = JsonNullable.<Integer>of(rowHeightLevel);
  }


  public ViewSO rows(List<ViewRowSO> rows) {
    this.rows = JsonNullable.<List<ViewRowSO>>of(rows);
    
    return this;
  }

  public ViewSO addRowsItem(ViewRowSO rowsItem) {
    if (this.rows == null || !this.rows.isPresent()) {
      this.rows = JsonNullable.<List<ViewRowSO>>of(new ArrayList<>());
    }
    try {
      this.rows.get().add(rowsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get rows
   * @return rows
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public List<ViewRowSO> getRows() {
        return rows.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ROWS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<ViewRowSO>> getRows_JsonNullable() {
    return rows;
  }
  
  @JsonProperty(JSON_PROPERTY_ROWS)
  public void setRows_JsonNullable(JsonNullable<List<ViewRowSO>> rows) {
    this.rows = rows;
  }

  public void setRows(List<ViewRowSO> rows) {
    this.rows = JsonNullable.<List<ViewRowSO>>of(rows);
  }


  public ViewSO sortInfo(ISortInfo sortInfo) {
    this.sortInfo = JsonNullable.<ISortInfo>of(sortInfo);
    
    return this;
  }

   /**
   * Get sortInfo
   * @return sortInfo
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public ISortInfo getSortInfo() {
        return sortInfo.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SORT_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ISortInfo> getSortInfo_JsonNullable() {
    return sortInfo;
  }
  
  @JsonProperty(JSON_PROPERTY_SORT_INFO)
  public void setSortInfo_JsonNullable(JsonNullable<ISortInfo> sortInfo) {
    this.sortInfo = sortInfo;
  }

  public void setSortInfo(ISortInfo sortInfo) {
    this.sortInfo = JsonNullable.<ISortInfo>of(sortInfo);
  }


  public ViewSO style(ViewStyleSo style) {
    this.style = JsonNullable.<ViewStyleSo>of(style);
    
    return this;
  }

   /**
   * Get style
   * @return style
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public ViewStyleSo getStyle() {
        return style.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STYLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ViewStyleSo> getStyle_JsonNullable() {
    return style;
  }
  
  @JsonProperty(JSON_PROPERTY_STYLE)
  public void setStyle_JsonNullable(JsonNullable<ViewStyleSo> style) {
    this.style = style;
  }

  public void setStyle(ViewStyleSo style) {
    this.style = JsonNullable.<ViewStyleSo>of(style);
  }


  public ViewSO type(Long type) {
    this.type = JsonNullable.<Long>of(type);
    
    return this;
  }

   /**
   * Get type
   * minimum: 0
   * @return type
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Long getType() {
        return type.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Long> getType_JsonNullable() {
    return type;
  }
  
  @JsonProperty(JSON_PROPERTY_TYPE)
  public void setType_JsonNullable(JsonNullable<Long> type) {
    this.type = type;
  }

  public void setType(Long type) {
    this.type = JsonNullable.<Long>of(type);
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ViewSO viewSO = (ViewSO) o;
    return equalsNullable(this.autoHeadHeight, viewSO.autoHeadHeight) &&
        equalsNullable(this.autoSave, viewSO.autoSave) &&
        Objects.equals(this.columns, viewSO.columns) &&
        equalsNullable(this.description, viewSO.description) &&
        equalsNullable(this.displayHiddenColumnWithinMirror, viewSO.displayHiddenColumnWithinMirror) &&
        equalsNullable(this.filterInfo, viewSO.filterInfo) &&
        equalsNullable(this.frozenColumnCount, viewSO.frozenColumnCount) &&
        equalsNullable(this.groupInfo, viewSO.groupInfo) &&
        equalsNullable(this.hidden, viewSO.hidden) &&
        equalsNullable(this.id, viewSO.id) &&
        equalsNullable(this.lockInfo, viewSO.lockInfo) &&
        equalsNullable(this.name, viewSO.name) &&
        equalsNullable(this.rowHeightLevel, viewSO.rowHeightLevel) &&
        equalsNullable(this.rows, viewSO.rows) &&
        equalsNullable(this.sortInfo, viewSO.sortInfo) &&
        equalsNullable(this.style, viewSO.style) &&
        equalsNullable(this.type, viewSO.type);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(autoHeadHeight), hashCodeNullable(autoSave), columns, hashCodeNullable(description), hashCodeNullable(displayHiddenColumnWithinMirror), hashCodeNullable(filterInfo), hashCodeNullable(frozenColumnCount), hashCodeNullable(groupInfo), hashCodeNullable(hidden), hashCodeNullable(id), hashCodeNullable(lockInfo), hashCodeNullable(name), hashCodeNullable(rowHeightLevel), hashCodeNullable(rows), hashCodeNullable(sortInfo), hashCodeNullable(style), hashCodeNullable(type));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ViewSO {\n");
    sb.append("    autoHeadHeight: ").append(toIndentedString(autoHeadHeight)).append("\n");
    sb.append("    autoSave: ").append(toIndentedString(autoSave)).append("\n");
    sb.append("    columns: ").append(toIndentedString(columns)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    displayHiddenColumnWithinMirror: ").append(toIndentedString(displayHiddenColumnWithinMirror)).append("\n");
    sb.append("    filterInfo: ").append(toIndentedString(filterInfo)).append("\n");
    sb.append("    frozenColumnCount: ").append(toIndentedString(frozenColumnCount)).append("\n");
    sb.append("    groupInfo: ").append(toIndentedString(groupInfo)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lockInfo: ").append(toIndentedString(lockInfo)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    rowHeightLevel: ").append(toIndentedString(rowHeightLevel)).append("\n");
    sb.append("    rows: ").append(toIndentedString(rows)).append("\n");
    sb.append("    sortInfo: ").append(toIndentedString(sortInfo)).append("\n");
    sb.append("    style: ").append(toIndentedString(style)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

