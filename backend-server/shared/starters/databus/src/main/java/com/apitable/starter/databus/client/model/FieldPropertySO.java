/*
 * databus-server
 * databus-server APIs
 *
 * The version of the OpenAPI document: 1.8.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.apitable.starter.databus.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.apitable.starter.databus.client.model.CollectType;
import com.apitable.starter.databus.client.model.DateFormat;
import com.apitable.starter.databus.client.model.IButtonAction;
import com.apitable.starter.databus.client.model.IButtonStyle;
import com.apitable.starter.databus.client.model.IFilterInfo;
import com.apitable.starter.databus.client.model.LinkedFields;
import com.apitable.starter.databus.client.model.LookUpLimitType;
import com.apitable.starter.databus.client.model.LookUpSortInfo;
import com.apitable.starter.databus.client.model.RollUpFuncType;
import com.apitable.starter.databus.client.model.SingleSelectProperty;
import com.apitable.starter.databus.client.model.SymbolAlign;
import com.apitable.starter.databus.client.model.TimeFormat;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * FieldPropertySO
 */
@JsonPropertyOrder({
  FieldPropertySO.JSON_PROPERTY_ACTION,
  FieldPropertySO.JSON_PROPERTY_AUTO_FILL,
  FieldPropertySO.JSON_PROPERTY_BROTHER_FIELD_ID,
  FieldPropertySO.JSON_PROPERTY_COLLECT_TYPE,
  FieldPropertySO.JSON_PROPERTY_COMMA_STYLE,
  FieldPropertySO.JSON_PROPERTY_DATASHEET_ID,
  FieldPropertySO.JSON_PROPERTY_DATE_FORMAT,
  FieldPropertySO.JSON_PROPERTY_DEFAULT_VALUE,
  FieldPropertySO.JSON_PROPERTY_ENABLE_FILTER_SORT,
  FieldPropertySO.JSON_PROPERTY_EXPRESSION,
  FieldPropertySO.JSON_PROPERTY_FIELD_ID_COLLECTION,
  FieldPropertySO.JSON_PROPERTY_FILTER_INFO,
  FieldPropertySO.JSON_PROPERTY_FOREIGN_DATASHEET_ID,
  FieldPropertySO.JSON_PROPERTY_FORMATTING,
  FieldPropertySO.JSON_PROPERTY_FULL_LINKED_FIELDS,
  FieldPropertySO.JSON_PROPERTY_ICON,
  FieldPropertySO.JSON_PROPERTY_INCLUDE_TIME,
  FieldPropertySO.JSON_PROPERTY_INCLUDE_TIME_ZONE,
  FieldPropertySO.JSON_PROPERTY_IS_MULTI,
  FieldPropertySO.JSON_PROPERTY_IS_RECOG_URL_FLAG,
  FieldPropertySO.JSON_PROPERTY_LIMIT_SINGLE_RECORD,
  FieldPropertySO.JSON_PROPERTY_LIMIT_TO_VIEW,
  FieldPropertySO.JSON_PROPERTY_LINKED_DATASHEET_ID,
  FieldPropertySO.JSON_PROPERTY_LINKED_FIELDS,
  FieldPropertySO.JSON_PROPERTY_LINKED_VIEW_ID,
  FieldPropertySO.JSON_PROPERTY_LOOK_UP_LIMIT,
  FieldPropertySO.JSON_PROPERTY_LOOK_UP_TARGET_FIELD_ID,
  FieldPropertySO.JSON_PROPERTY_MAX,
  FieldPropertySO.JSON_PROPERTY_NEXT_ID,
  FieldPropertySO.JSON_PROPERTY_OPEN_FILTER,
  FieldPropertySO.JSON_PROPERTY_OPTIONS,
  FieldPropertySO.JSON_PROPERTY_PRECISION,
  FieldPropertySO.JSON_PROPERTY_RELATED_LINK_FIELD_ID,
  FieldPropertySO.JSON_PROPERTY_ROLL_UP_TYPE,
  FieldPropertySO.JSON_PROPERTY_SHOULD_SEND_MSG,
  FieldPropertySO.JSON_PROPERTY_SHOW_ALL,
  FieldPropertySO.JSON_PROPERTY_SORT_INFO,
  FieldPropertySO.JSON_PROPERTY_STYLE,
  FieldPropertySO.JSON_PROPERTY_SUBSCRIPTION,
  FieldPropertySO.JSON_PROPERTY_SYMBOL,
  FieldPropertySO.JSON_PROPERTY_SYMBOL_ALIGN,
  FieldPropertySO.JSON_PROPERTY_TEXT,
  FieldPropertySO.JSON_PROPERTY_TIME_FORMAT,
  FieldPropertySO.JSON_PROPERTY_TIME_ZONE,
  FieldPropertySO.JSON_PROPERTY_UNIT_IDS,
  FieldPropertySO.JSON_PROPERTY_UUIDS,
  FieldPropertySO.JSON_PROPERTY_VIEW_IDX
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class FieldPropertySO {
  public static final String JSON_PROPERTY_ACTION = "action";
  private IButtonAction action;

  public static final String JSON_PROPERTY_AUTO_FILL = "autoFill";
  private Boolean autoFill;

  public static final String JSON_PROPERTY_BROTHER_FIELD_ID = "brotherFieldId";
  private String brotherFieldId;

  public static final String JSON_PROPERTY_COLLECT_TYPE = "collectType";
  private CollectType collectType;

  public static final String JSON_PROPERTY_COMMA_STYLE = "commaStyle";
  private String commaStyle;

  public static final String JSON_PROPERTY_DATASHEET_ID = "datasheetId";
  private String datasheetId;

  public static final String JSON_PROPERTY_DATE_FORMAT = "dateFormat";
  private DateFormat dateFormat;

  public static final String JSON_PROPERTY_DEFAULT_VALUE = "defaultValue";
  private Object defaultValue = null;

  public static final String JSON_PROPERTY_ENABLE_FILTER_SORT = "enableFilterSort";
  private Boolean enableFilterSort;

  public static final String JSON_PROPERTY_EXPRESSION = "expression";
  private String expression;

  public static final String JSON_PROPERTY_FIELD_ID_COLLECTION = "fieldIdCollection";
  private List<String> fieldIdCollection;

  public static final String JSON_PROPERTY_FILTER_INFO = "filterInfo";
  private IFilterInfo filterInfo;

  public static final String JSON_PROPERTY_FOREIGN_DATASHEET_ID = "foreignDatasheetId";
  private String foreignDatasheetId;

  public static final String JSON_PROPERTY_FORMATTING = "formatting";
  private Object formatting;

  public static final String JSON_PROPERTY_FULL_LINKED_FIELDS = "fullLinkedFields";
  private List<LinkedFields> fullLinkedFields;

  public static final String JSON_PROPERTY_ICON = "icon";
  private String icon;

  public static final String JSON_PROPERTY_INCLUDE_TIME = "includeTime";
  private Boolean includeTime;

  public static final String JSON_PROPERTY_INCLUDE_TIME_ZONE = "includeTimeZone";
  private Boolean includeTimeZone;

  public static final String JSON_PROPERTY_IS_MULTI = "isMulti";
  private Boolean isMulti;

  public static final String JSON_PROPERTY_IS_RECOG_URL_FLAG = "isRecogUrlFlag";
  private Boolean isRecogUrlFlag;

  public static final String JSON_PROPERTY_LIMIT_SINGLE_RECORD = "limitSingleRecord";
  private Boolean limitSingleRecord;

  public static final String JSON_PROPERTY_LIMIT_TO_VIEW = "limitToView";
  private String limitToView;

  public static final String JSON_PROPERTY_LINKED_DATASHEET_ID = "linkedDatasheetId";
  private String linkedDatasheetId;

  public static final String JSON_PROPERTY_LINKED_FIELDS = "linkedFields";
  private List<LinkedFields> linkedFields;

  public static final String JSON_PROPERTY_LINKED_VIEW_ID = "linkedViewId";
  private String linkedViewId;

  public static final String JSON_PROPERTY_LOOK_UP_LIMIT = "lookUpLimit";
  private LookUpLimitType lookUpLimit;

  public static final String JSON_PROPERTY_LOOK_UP_TARGET_FIELD_ID = "lookUpTargetFieldId";
  private String lookUpTargetFieldId;

  public static final String JSON_PROPERTY_MAX = "max";
  private Integer max;

  public static final String JSON_PROPERTY_NEXT_ID = "nextId";
  private Integer nextId;

  public static final String JSON_PROPERTY_OPEN_FILTER = "openFilter";
  private Boolean openFilter;

  public static final String JSON_PROPERTY_OPTIONS = "options";
  private List<SingleSelectProperty> options;

  public static final String JSON_PROPERTY_PRECISION = "precision";
  private Integer precision;

  public static final String JSON_PROPERTY_RELATED_LINK_FIELD_ID = "relatedLinkFieldId";
  private String relatedLinkFieldId;

  public static final String JSON_PROPERTY_ROLL_UP_TYPE = "rollUpType";
  private RollUpFuncType rollUpType;

  public static final String JSON_PROPERTY_SHOULD_SEND_MSG = "shouldSendMsg";
  private Boolean shouldSendMsg;

  public static final String JSON_PROPERTY_SHOW_ALL = "showAll";
  private Boolean showAll;

  public static final String JSON_PROPERTY_SORT_INFO = "sortInfo";
  private LookUpSortInfo sortInfo;

  public static final String JSON_PROPERTY_STYLE = "style";
  private IButtonStyle style;

  public static final String JSON_PROPERTY_SUBSCRIPTION = "subscription";
  private Boolean subscription;

  public static final String JSON_PROPERTY_SYMBOL = "symbol";
  private String symbol;

  public static final String JSON_PROPERTY_SYMBOL_ALIGN = "symbolAlign";
  private SymbolAlign symbolAlign;

  public static final String JSON_PROPERTY_TEXT = "text";
  private String text;

  public static final String JSON_PROPERTY_TIME_FORMAT = "timeFormat";
  private TimeFormat timeFormat;

  public static final String JSON_PROPERTY_TIME_ZONE = "timeZone";
  private String timeZone;

  public static final String JSON_PROPERTY_UNIT_IDS = "unitIds";
  private List<String> unitIds;

  public static final String JSON_PROPERTY_UUIDS = "uuids";
  private List<Object> uuids;

  public static final String JSON_PROPERTY_VIEW_IDX = "viewIdx";
  private Integer viewIdx;

  public FieldPropertySO() {
  }

  public FieldPropertySO action(IButtonAction action) {
    
    this.action = action;
    return this;
  }

   /**
   * Get action
   * @return action
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IButtonAction getAction() {
    return action;
  }


  @JsonProperty(JSON_PROPERTY_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAction(IButtonAction action) {
    this.action = action;
  }


  public FieldPropertySO autoFill(Boolean autoFill) {
    
    this.autoFill = autoFill;
    return this;
  }

   /**
   * Get autoFill
   * @return autoFill
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTO_FILL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAutoFill() {
    return autoFill;
  }


  @JsonProperty(JSON_PROPERTY_AUTO_FILL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAutoFill(Boolean autoFill) {
    this.autoFill = autoFill;
  }


  public FieldPropertySO brotherFieldId(String brotherFieldId) {
    
    this.brotherFieldId = brotherFieldId;
    return this;
  }

   /**
   * Get brotherFieldId
   * @return brotherFieldId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BROTHER_FIELD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBrotherFieldId() {
    return brotherFieldId;
  }


  @JsonProperty(JSON_PROPERTY_BROTHER_FIELD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBrotherFieldId(String brotherFieldId) {
    this.brotherFieldId = brotherFieldId;
  }


  public FieldPropertySO collectType(CollectType collectType) {
    
    this.collectType = collectType;
    return this;
  }

   /**
   * Get collectType
   * @return collectType
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COLLECT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CollectType getCollectType() {
    return collectType;
  }


  @JsonProperty(JSON_PROPERTY_COLLECT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCollectType(CollectType collectType) {
    this.collectType = collectType;
  }


  public FieldPropertySO commaStyle(String commaStyle) {
    
    this.commaStyle = commaStyle;
    return this;
  }

   /**
   * Get commaStyle
   * @return commaStyle
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMMA_STYLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCommaStyle() {
    return commaStyle;
  }


  @JsonProperty(JSON_PROPERTY_COMMA_STYLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCommaStyle(String commaStyle) {
    this.commaStyle = commaStyle;
  }


  public FieldPropertySO datasheetId(String datasheetId) {
    
    this.datasheetId = datasheetId;
    return this;
  }

   /**
   * Get datasheetId
   * @return datasheetId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATASHEET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDatasheetId() {
    return datasheetId;
  }


  @JsonProperty(JSON_PROPERTY_DATASHEET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDatasheetId(String datasheetId) {
    this.datasheetId = datasheetId;
  }


  public FieldPropertySO dateFormat(DateFormat dateFormat) {
    
    this.dateFormat = dateFormat;
    return this;
  }

   /**
   * Get dateFormat
   * @return dateFormat
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateFormat getDateFormat() {
    return dateFormat;
  }


  @JsonProperty(JSON_PROPERTY_DATE_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateFormat(DateFormat dateFormat) {
    this.dateFormat = dateFormat;
  }


  public FieldPropertySO defaultValue(Object defaultValue) {
    
    this.defaultValue = defaultValue;
    return this;
  }

   /**
   * Get defaultValue
   * @return defaultValue
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEFAULT_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getDefaultValue() {
    return defaultValue;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefaultValue(Object defaultValue) {
    this.defaultValue = defaultValue;
  }


  public FieldPropertySO enableFilterSort(Boolean enableFilterSort) {
    
    this.enableFilterSort = enableFilterSort;
    return this;
  }

   /**
   * Get enableFilterSort
   * @return enableFilterSort
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE_FILTER_SORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnableFilterSort() {
    return enableFilterSort;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_FILTER_SORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableFilterSort(Boolean enableFilterSort) {
    this.enableFilterSort = enableFilterSort;
  }


  public FieldPropertySO expression(String expression) {
    
    this.expression = expression;
    return this;
  }

   /**
   * Get expression
   * @return expression
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPRESSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExpression() {
    return expression;
  }


  @JsonProperty(JSON_PROPERTY_EXPRESSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpression(String expression) {
    this.expression = expression;
  }


  public FieldPropertySO fieldIdCollection(List<String> fieldIdCollection) {
    
    this.fieldIdCollection = fieldIdCollection;
    return this;
  }

  public FieldPropertySO addFieldIdCollectionItem(String fieldIdCollectionItem) {
    if (this.fieldIdCollection == null) {
      this.fieldIdCollection = new ArrayList<>();
    }
    this.fieldIdCollection.add(fieldIdCollectionItem);
    return this;
  }

   /**
   * Get fieldIdCollection
   * @return fieldIdCollection
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIELD_ID_COLLECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getFieldIdCollection() {
    return fieldIdCollection;
  }


  @JsonProperty(JSON_PROPERTY_FIELD_ID_COLLECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFieldIdCollection(List<String> fieldIdCollection) {
    this.fieldIdCollection = fieldIdCollection;
  }


  public FieldPropertySO filterInfo(IFilterInfo filterInfo) {
    
    this.filterInfo = filterInfo;
    return this;
  }

   /**
   * Get filterInfo
   * @return filterInfo
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FILTER_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IFilterInfo getFilterInfo() {
    return filterInfo;
  }


  @JsonProperty(JSON_PROPERTY_FILTER_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFilterInfo(IFilterInfo filterInfo) {
    this.filterInfo = filterInfo;
  }


  public FieldPropertySO foreignDatasheetId(String foreignDatasheetId) {
    
    this.foreignDatasheetId = foreignDatasheetId;
    return this;
  }

   /**
   * Get foreignDatasheetId
   * @return foreignDatasheetId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FOREIGN_DATASHEET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getForeignDatasheetId() {
    return foreignDatasheetId;
  }


  @JsonProperty(JSON_PROPERTY_FOREIGN_DATASHEET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setForeignDatasheetId(String foreignDatasheetId) {
    this.foreignDatasheetId = foreignDatasheetId;
  }


  public FieldPropertySO formatting(Object formatting) {
    
    this.formatting = formatting;
    return this;
  }

   /**
   * Get formatting
   * @return formatting
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FORMATTING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getFormatting() {
    return formatting;
  }


  @JsonProperty(JSON_PROPERTY_FORMATTING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFormatting(Object formatting) {
    this.formatting = formatting;
  }


  public FieldPropertySO fullLinkedFields(List<LinkedFields> fullLinkedFields) {
    
    this.fullLinkedFields = fullLinkedFields;
    return this;
  }

  public FieldPropertySO addFullLinkedFieldsItem(LinkedFields fullLinkedFieldsItem) {
    if (this.fullLinkedFields == null) {
      this.fullLinkedFields = new ArrayList<>();
    }
    this.fullLinkedFields.add(fullLinkedFieldsItem);
    return this;
  }

   /**
   * Get fullLinkedFields
   * @return fullLinkedFields
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FULL_LINKED_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<LinkedFields> getFullLinkedFields() {
    return fullLinkedFields;
  }


  @JsonProperty(JSON_PROPERTY_FULL_LINKED_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFullLinkedFields(List<LinkedFields> fullLinkedFields) {
    this.fullLinkedFields = fullLinkedFields;
  }


  public FieldPropertySO icon(String icon) {
    
    this.icon = icon;
    return this;
  }

   /**
   * Get icon
   * @return icon
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ICON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIcon() {
    return icon;
  }


  @JsonProperty(JSON_PROPERTY_ICON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIcon(String icon) {
    this.icon = icon;
  }


  public FieldPropertySO includeTime(Boolean includeTime) {
    
    this.includeTime = includeTime;
    return this;
  }

   /**
   * Get includeTime
   * @return includeTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INCLUDE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIncludeTime() {
    return includeTime;
  }


  @JsonProperty(JSON_PROPERTY_INCLUDE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIncludeTime(Boolean includeTime) {
    this.includeTime = includeTime;
  }


  public FieldPropertySO includeTimeZone(Boolean includeTimeZone) {
    
    this.includeTimeZone = includeTimeZone;
    return this;
  }

   /**
   * Get includeTimeZone
   * @return includeTimeZone
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INCLUDE_TIME_ZONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIncludeTimeZone() {
    return includeTimeZone;
  }


  @JsonProperty(JSON_PROPERTY_INCLUDE_TIME_ZONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIncludeTimeZone(Boolean includeTimeZone) {
    this.includeTimeZone = includeTimeZone;
  }


  public FieldPropertySO isMulti(Boolean isMulti) {
    
    this.isMulti = isMulti;
    return this;
  }

   /**
   * Get isMulti
   * @return isMulti
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_MULTI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsMulti() {
    return isMulti;
  }


  @JsonProperty(JSON_PROPERTY_IS_MULTI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsMulti(Boolean isMulti) {
    this.isMulti = isMulti;
  }


  public FieldPropertySO isRecogUrlFlag(Boolean isRecogUrlFlag) {
    
    this.isRecogUrlFlag = isRecogUrlFlag;
    return this;
  }

   /**
   * Get isRecogUrlFlag
   * @return isRecogUrlFlag
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_RECOG_URL_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsRecogUrlFlag() {
    return isRecogUrlFlag;
  }


  @JsonProperty(JSON_PROPERTY_IS_RECOG_URL_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsRecogUrlFlag(Boolean isRecogUrlFlag) {
    this.isRecogUrlFlag = isRecogUrlFlag;
  }


  public FieldPropertySO limitSingleRecord(Boolean limitSingleRecord) {
    
    this.limitSingleRecord = limitSingleRecord;
    return this;
  }

   /**
   * Get limitSingleRecord
   * @return limitSingleRecord
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIMIT_SINGLE_RECORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getLimitSingleRecord() {
    return limitSingleRecord;
  }


  @JsonProperty(JSON_PROPERTY_LIMIT_SINGLE_RECORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLimitSingleRecord(Boolean limitSingleRecord) {
    this.limitSingleRecord = limitSingleRecord;
  }


  public FieldPropertySO limitToView(String limitToView) {
    
    this.limitToView = limitToView;
    return this;
  }

   /**
   * Get limitToView
   * @return limitToView
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIMIT_TO_VIEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLimitToView() {
    return limitToView;
  }


  @JsonProperty(JSON_PROPERTY_LIMIT_TO_VIEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLimitToView(String limitToView) {
    this.limitToView = limitToView;
  }


  public FieldPropertySO linkedDatasheetId(String linkedDatasheetId) {
    
    this.linkedDatasheetId = linkedDatasheetId;
    return this;
  }

   /**
   * Get linkedDatasheetId
   * @return linkedDatasheetId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LINKED_DATASHEET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLinkedDatasheetId() {
    return linkedDatasheetId;
  }


  @JsonProperty(JSON_PROPERTY_LINKED_DATASHEET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLinkedDatasheetId(String linkedDatasheetId) {
    this.linkedDatasheetId = linkedDatasheetId;
  }


  public FieldPropertySO linkedFields(List<LinkedFields> linkedFields) {
    
    this.linkedFields = linkedFields;
    return this;
  }

  public FieldPropertySO addLinkedFieldsItem(LinkedFields linkedFieldsItem) {
    if (this.linkedFields == null) {
      this.linkedFields = new ArrayList<>();
    }
    this.linkedFields.add(linkedFieldsItem);
    return this;
  }

   /**
   * Get linkedFields
   * @return linkedFields
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LINKED_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<LinkedFields> getLinkedFields() {
    return linkedFields;
  }


  @JsonProperty(JSON_PROPERTY_LINKED_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLinkedFields(List<LinkedFields> linkedFields) {
    this.linkedFields = linkedFields;
  }


  public FieldPropertySO linkedViewId(String linkedViewId) {
    
    this.linkedViewId = linkedViewId;
    return this;
  }

   /**
   * Get linkedViewId
   * @return linkedViewId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LINKED_VIEW_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLinkedViewId() {
    return linkedViewId;
  }


  @JsonProperty(JSON_PROPERTY_LINKED_VIEW_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLinkedViewId(String linkedViewId) {
    this.linkedViewId = linkedViewId;
  }


  public FieldPropertySO lookUpLimit(LookUpLimitType lookUpLimit) {
    
    this.lookUpLimit = lookUpLimit;
    return this;
  }

   /**
   * Get lookUpLimit
   * @return lookUpLimit
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOOK_UP_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LookUpLimitType getLookUpLimit() {
    return lookUpLimit;
  }


  @JsonProperty(JSON_PROPERTY_LOOK_UP_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLookUpLimit(LookUpLimitType lookUpLimit) {
    this.lookUpLimit = lookUpLimit;
  }


  public FieldPropertySO lookUpTargetFieldId(String lookUpTargetFieldId) {
    
    this.lookUpTargetFieldId = lookUpTargetFieldId;
    return this;
  }

   /**
   * Get lookUpTargetFieldId
   * @return lookUpTargetFieldId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOOK_UP_TARGET_FIELD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLookUpTargetFieldId() {
    return lookUpTargetFieldId;
  }


  @JsonProperty(JSON_PROPERTY_LOOK_UP_TARGET_FIELD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLookUpTargetFieldId(String lookUpTargetFieldId) {
    this.lookUpTargetFieldId = lookUpTargetFieldId;
  }


  public FieldPropertySO max(Integer max) {
    
    this.max = max;
    return this;
  }

   /**
   * Get max
   * minimum: 0
   * @return max
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMax() {
    return max;
  }


  @JsonProperty(JSON_PROPERTY_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMax(Integer max) {
    this.max = max;
  }


  public FieldPropertySO nextId(Integer nextId) {
    
    this.nextId = nextId;
    return this;
  }

   /**
   * Get nextId
   * @return nextId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNextId() {
    return nextId;
  }


  @JsonProperty(JSON_PROPERTY_NEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNextId(Integer nextId) {
    this.nextId = nextId;
  }


  public FieldPropertySO openFilter(Boolean openFilter) {
    
    this.openFilter = openFilter;
    return this;
  }

   /**
   * Get openFilter
   * @return openFilter
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPEN_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getOpenFilter() {
    return openFilter;
  }


  @JsonProperty(JSON_PROPERTY_OPEN_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOpenFilter(Boolean openFilter) {
    this.openFilter = openFilter;
  }


  public FieldPropertySO options(List<SingleSelectProperty> options) {
    
    this.options = options;
    return this;
  }

  public FieldPropertySO addOptionsItem(SingleSelectProperty optionsItem) {
    if (this.options == null) {
      this.options = new ArrayList<>();
    }
    this.options.add(optionsItem);
    return this;
  }

   /**
   * Get options
   * @return options
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SingleSelectProperty> getOptions() {
    return options;
  }


  @JsonProperty(JSON_PROPERTY_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOptions(List<SingleSelectProperty> options) {
    this.options = options;
  }


  public FieldPropertySO precision(Integer precision) {
    
    this.precision = precision;
    return this;
  }

   /**
   * Get precision
   * @return precision
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRECISION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPrecision() {
    return precision;
  }


  @JsonProperty(JSON_PROPERTY_PRECISION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrecision(Integer precision) {
    this.precision = precision;
  }


  public FieldPropertySO relatedLinkFieldId(String relatedLinkFieldId) {
    
    this.relatedLinkFieldId = relatedLinkFieldId;
    return this;
  }

   /**
   * Get relatedLinkFieldId
   * @return relatedLinkFieldId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RELATED_LINK_FIELD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRelatedLinkFieldId() {
    return relatedLinkFieldId;
  }


  @JsonProperty(JSON_PROPERTY_RELATED_LINK_FIELD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRelatedLinkFieldId(String relatedLinkFieldId) {
    this.relatedLinkFieldId = relatedLinkFieldId;
  }


  public FieldPropertySO rollUpType(RollUpFuncType rollUpType) {
    
    this.rollUpType = rollUpType;
    return this;
  }

   /**
   * Get rollUpType
   * @return rollUpType
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ROLL_UP_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RollUpFuncType getRollUpType() {
    return rollUpType;
  }


  @JsonProperty(JSON_PROPERTY_ROLL_UP_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRollUpType(RollUpFuncType rollUpType) {
    this.rollUpType = rollUpType;
  }


  public FieldPropertySO shouldSendMsg(Boolean shouldSendMsg) {
    
    this.shouldSendMsg = shouldSendMsg;
    return this;
  }

   /**
   * Get shouldSendMsg
   * @return shouldSendMsg
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHOULD_SEND_MSG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getShouldSendMsg() {
    return shouldSendMsg;
  }


  @JsonProperty(JSON_PROPERTY_SHOULD_SEND_MSG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShouldSendMsg(Boolean shouldSendMsg) {
    this.shouldSendMsg = shouldSendMsg;
  }


  public FieldPropertySO showAll(Boolean showAll) {
    
    this.showAll = showAll;
    return this;
  }

   /**
   * Get showAll
   * @return showAll
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHOW_ALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getShowAll() {
    return showAll;
  }


  @JsonProperty(JSON_PROPERTY_SHOW_ALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShowAll(Boolean showAll) {
    this.showAll = showAll;
  }


  public FieldPropertySO sortInfo(LookUpSortInfo sortInfo) {
    
    this.sortInfo = sortInfo;
    return this;
  }

   /**
   * Get sortInfo
   * @return sortInfo
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SORT_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LookUpSortInfo getSortInfo() {
    return sortInfo;
  }


  @JsonProperty(JSON_PROPERTY_SORT_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSortInfo(LookUpSortInfo sortInfo) {
    this.sortInfo = sortInfo;
  }


  public FieldPropertySO style(IButtonStyle style) {
    
    this.style = style;
    return this;
  }

   /**
   * Get style
   * @return style
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STYLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IButtonStyle getStyle() {
    return style;
  }


  @JsonProperty(JSON_PROPERTY_STYLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStyle(IButtonStyle style) {
    this.style = style;
  }


  public FieldPropertySO subscription(Boolean subscription) {
    
    this.subscription = subscription;
    return this;
  }

   /**
   * Get subscription
   * @return subscription
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSubscription() {
    return subscription;
  }


  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubscription(Boolean subscription) {
    this.subscription = subscription;
  }


  public FieldPropertySO symbol(String symbol) {
    
    this.symbol = symbol;
    return this;
  }

   /**
   * Get symbol
   * @return symbol
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSymbol() {
    return symbol;
  }


  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }


  public FieldPropertySO symbolAlign(SymbolAlign symbolAlign) {
    
    this.symbolAlign = symbolAlign;
    return this;
  }

   /**
   * Get symbolAlign
   * @return symbolAlign
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SYMBOL_ALIGN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SymbolAlign getSymbolAlign() {
    return symbolAlign;
  }


  @JsonProperty(JSON_PROPERTY_SYMBOL_ALIGN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSymbolAlign(SymbolAlign symbolAlign) {
    this.symbolAlign = symbolAlign;
  }


  public FieldPropertySO text(String text) {
    
    this.text = text;
    return this;
  }

   /**
   * Get text
   * @return text
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getText() {
    return text;
  }


  @JsonProperty(JSON_PROPERTY_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setText(String text) {
    this.text = text;
  }


  public FieldPropertySO timeFormat(TimeFormat timeFormat) {
    
    this.timeFormat = timeFormat;
    return this;
  }

   /**
   * Get timeFormat
   * @return timeFormat
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TIME_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TimeFormat getTimeFormat() {
    return timeFormat;
  }


  @JsonProperty(JSON_PROPERTY_TIME_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimeFormat(TimeFormat timeFormat) {
    this.timeFormat = timeFormat;
  }


  public FieldPropertySO timeZone(String timeZone) {
    
    this.timeZone = timeZone;
    return this;
  }

   /**
   * Get timeZone
   * @return timeZone
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TIME_ZONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTimeZone() {
    return timeZone;
  }


  @JsonProperty(JSON_PROPERTY_TIME_ZONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimeZone(String timeZone) {
    this.timeZone = timeZone;
  }


  public FieldPropertySO unitIds(List<String> unitIds) {
    
    this.unitIds = unitIds;
    return this;
  }

  public FieldPropertySO addUnitIdsItem(String unitIdsItem) {
    if (this.unitIds == null) {
      this.unitIds = new ArrayList<>();
    }
    this.unitIds.add(unitIdsItem);
    return this;
  }

   /**
   * Get unitIds
   * @return unitIds
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNIT_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getUnitIds() {
    return unitIds;
  }


  @JsonProperty(JSON_PROPERTY_UNIT_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnitIds(List<String> unitIds) {
    this.unitIds = unitIds;
  }


  public FieldPropertySO uuids(List<Object> uuids) {
    
    this.uuids = uuids;
    return this;
  }

  public FieldPropertySO addUuidsItem(Object uuidsItem) {
    if (this.uuids == null) {
      this.uuids = new ArrayList<>();
    }
    this.uuids.add(uuidsItem);
    return this;
  }

   /**
   * Get uuids
   * @return uuids
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UUIDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Object> getUuids() {
    return uuids;
  }


  @JsonProperty(JSON_PROPERTY_UUIDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUuids(List<Object> uuids) {
    this.uuids = uuids;
  }


  public FieldPropertySO viewIdx(Integer viewIdx) {
    
    this.viewIdx = viewIdx;
    return this;
  }

   /**
   * Get viewIdx
   * @return viewIdx
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VIEW_IDX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getViewIdx() {
    return viewIdx;
  }


  @JsonProperty(JSON_PROPERTY_VIEW_IDX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setViewIdx(Integer viewIdx) {
    this.viewIdx = viewIdx;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FieldPropertySO fieldPropertySO = (FieldPropertySO) o;
    return Objects.equals(this.action, fieldPropertySO.action) &&
        Objects.equals(this.autoFill, fieldPropertySO.autoFill) &&
        Objects.equals(this.brotherFieldId, fieldPropertySO.brotherFieldId) &&
        Objects.equals(this.collectType, fieldPropertySO.collectType) &&
        Objects.equals(this.commaStyle, fieldPropertySO.commaStyle) &&
        Objects.equals(this.datasheetId, fieldPropertySO.datasheetId) &&
        Objects.equals(this.dateFormat, fieldPropertySO.dateFormat) &&
        Objects.equals(this.defaultValue, fieldPropertySO.defaultValue) &&
        Objects.equals(this.enableFilterSort, fieldPropertySO.enableFilterSort) &&
        Objects.equals(this.expression, fieldPropertySO.expression) &&
        Objects.equals(this.fieldIdCollection, fieldPropertySO.fieldIdCollection) &&
        Objects.equals(this.filterInfo, fieldPropertySO.filterInfo) &&
        Objects.equals(this.foreignDatasheetId, fieldPropertySO.foreignDatasheetId) &&
        Objects.equals(this.formatting, fieldPropertySO.formatting) &&
        Objects.equals(this.fullLinkedFields, fieldPropertySO.fullLinkedFields) &&
        Objects.equals(this.icon, fieldPropertySO.icon) &&
        Objects.equals(this.includeTime, fieldPropertySO.includeTime) &&
        Objects.equals(this.includeTimeZone, fieldPropertySO.includeTimeZone) &&
        Objects.equals(this.isMulti, fieldPropertySO.isMulti) &&
        Objects.equals(this.isRecogUrlFlag, fieldPropertySO.isRecogUrlFlag) &&
        Objects.equals(this.limitSingleRecord, fieldPropertySO.limitSingleRecord) &&
        Objects.equals(this.limitToView, fieldPropertySO.limitToView) &&
        Objects.equals(this.linkedDatasheetId, fieldPropertySO.linkedDatasheetId) &&
        Objects.equals(this.linkedFields, fieldPropertySO.linkedFields) &&
        Objects.equals(this.linkedViewId, fieldPropertySO.linkedViewId) &&
        Objects.equals(this.lookUpLimit, fieldPropertySO.lookUpLimit) &&
        Objects.equals(this.lookUpTargetFieldId, fieldPropertySO.lookUpTargetFieldId) &&
        Objects.equals(this.max, fieldPropertySO.max) &&
        Objects.equals(this.nextId, fieldPropertySO.nextId) &&
        Objects.equals(this.openFilter, fieldPropertySO.openFilter) &&
        Objects.equals(this.options, fieldPropertySO.options) &&
        Objects.equals(this.precision, fieldPropertySO.precision) &&
        Objects.equals(this.relatedLinkFieldId, fieldPropertySO.relatedLinkFieldId) &&
        Objects.equals(this.rollUpType, fieldPropertySO.rollUpType) &&
        Objects.equals(this.shouldSendMsg, fieldPropertySO.shouldSendMsg) &&
        Objects.equals(this.showAll, fieldPropertySO.showAll) &&
        Objects.equals(this.sortInfo, fieldPropertySO.sortInfo) &&
        Objects.equals(this.style, fieldPropertySO.style) &&
        Objects.equals(this.subscription, fieldPropertySO.subscription) &&
        Objects.equals(this.symbol, fieldPropertySO.symbol) &&
        Objects.equals(this.symbolAlign, fieldPropertySO.symbolAlign) &&
        Objects.equals(this.text, fieldPropertySO.text) &&
        Objects.equals(this.timeFormat, fieldPropertySO.timeFormat) &&
        Objects.equals(this.timeZone, fieldPropertySO.timeZone) &&
        Objects.equals(this.unitIds, fieldPropertySO.unitIds) &&
        Objects.equals(this.uuids, fieldPropertySO.uuids) &&
        Objects.equals(this.viewIdx, fieldPropertySO.viewIdx);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, autoFill, brotherFieldId, collectType, commaStyle, datasheetId, dateFormat, defaultValue, enableFilterSort, expression, fieldIdCollection, filterInfo, foreignDatasheetId, formatting, fullLinkedFields, icon, includeTime, includeTimeZone, isMulti, isRecogUrlFlag, limitSingleRecord, limitToView, linkedDatasheetId, linkedFields, linkedViewId, lookUpLimit, lookUpTargetFieldId, max, nextId, openFilter, options, precision, relatedLinkFieldId, rollUpType, shouldSendMsg, showAll, sortInfo, style, subscription, symbol, symbolAlign, text, timeFormat, timeZone, unitIds, uuids, viewIdx);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FieldPropertySO {\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    autoFill: ").append(toIndentedString(autoFill)).append("\n");
    sb.append("    brotherFieldId: ").append(toIndentedString(brotherFieldId)).append("\n");
    sb.append("    collectType: ").append(toIndentedString(collectType)).append("\n");
    sb.append("    commaStyle: ").append(toIndentedString(commaStyle)).append("\n");
    sb.append("    datasheetId: ").append(toIndentedString(datasheetId)).append("\n");
    sb.append("    dateFormat: ").append(toIndentedString(dateFormat)).append("\n");
    sb.append("    defaultValue: ").append(toIndentedString(defaultValue)).append("\n");
    sb.append("    enableFilterSort: ").append(toIndentedString(enableFilterSort)).append("\n");
    sb.append("    expression: ").append(toIndentedString(expression)).append("\n");
    sb.append("    fieldIdCollection: ").append(toIndentedString(fieldIdCollection)).append("\n");
    sb.append("    filterInfo: ").append(toIndentedString(filterInfo)).append("\n");
    sb.append("    foreignDatasheetId: ").append(toIndentedString(foreignDatasheetId)).append("\n");
    sb.append("    formatting: ").append(toIndentedString(formatting)).append("\n");
    sb.append("    fullLinkedFields: ").append(toIndentedString(fullLinkedFields)).append("\n");
    sb.append("    icon: ").append(toIndentedString(icon)).append("\n");
    sb.append("    includeTime: ").append(toIndentedString(includeTime)).append("\n");
    sb.append("    includeTimeZone: ").append(toIndentedString(includeTimeZone)).append("\n");
    sb.append("    isMulti: ").append(toIndentedString(isMulti)).append("\n");
    sb.append("    isRecogUrlFlag: ").append(toIndentedString(isRecogUrlFlag)).append("\n");
    sb.append("    limitSingleRecord: ").append(toIndentedString(limitSingleRecord)).append("\n");
    sb.append("    limitToView: ").append(toIndentedString(limitToView)).append("\n");
    sb.append("    linkedDatasheetId: ").append(toIndentedString(linkedDatasheetId)).append("\n");
    sb.append("    linkedFields: ").append(toIndentedString(linkedFields)).append("\n");
    sb.append("    linkedViewId: ").append(toIndentedString(linkedViewId)).append("\n");
    sb.append("    lookUpLimit: ").append(toIndentedString(lookUpLimit)).append("\n");
    sb.append("    lookUpTargetFieldId: ").append(toIndentedString(lookUpTargetFieldId)).append("\n");
    sb.append("    max: ").append(toIndentedString(max)).append("\n");
    sb.append("    nextId: ").append(toIndentedString(nextId)).append("\n");
    sb.append("    openFilter: ").append(toIndentedString(openFilter)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    precision: ").append(toIndentedString(precision)).append("\n");
    sb.append("    relatedLinkFieldId: ").append(toIndentedString(relatedLinkFieldId)).append("\n");
    sb.append("    rollUpType: ").append(toIndentedString(rollUpType)).append("\n");
    sb.append("    shouldSendMsg: ").append(toIndentedString(shouldSendMsg)).append("\n");
    sb.append("    showAll: ").append(toIndentedString(showAll)).append("\n");
    sb.append("    sortInfo: ").append(toIndentedString(sortInfo)).append("\n");
    sb.append("    style: ").append(toIndentedString(style)).append("\n");
    sb.append("    subscription: ").append(toIndentedString(subscription)).append("\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    symbolAlign: ").append(toIndentedString(symbolAlign)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    timeFormat: ").append(toIndentedString(timeFormat)).append("\n");
    sb.append("    timeZone: ").append(toIndentedString(timeZone)).append("\n");
    sb.append("    unitIds: ").append(toIndentedString(unitIds)).append("\n");
    sb.append("    uuids: ").append(toIndentedString(uuids)).append("\n");
    sb.append("    viewIdx: ").append(toIndentedString(viewIdx)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

