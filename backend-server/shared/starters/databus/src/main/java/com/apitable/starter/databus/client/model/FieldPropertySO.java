/*
 * databus-server
 * databus-server APIs
 *
 * The version of the OpenAPI document: 1.6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.apitable.starter.databus.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.apitable.starter.databus.client.model.CollectType;
import com.apitable.starter.databus.client.model.DateFormat;
import com.apitable.starter.databus.client.model.IFilterInfo;
import com.apitable.starter.databus.client.model.LinkedFields;
import com.apitable.starter.databus.client.model.LookUpLimitType;
import com.apitable.starter.databus.client.model.LookUpSortInfo;
import com.apitable.starter.databus.client.model.RollUpFuncType;
import com.apitable.starter.databus.client.model.SingleSelectProperty;
import com.apitable.starter.databus.client.model.SymbolAlign;
import com.apitable.starter.databus.client.model.TimeFormat;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * FieldPropertySO
 */
@JsonPropertyOrder({
  FieldPropertySO.JSON_PROPERTY_AUTO_FILL,
  FieldPropertySO.JSON_PROPERTY_BROTHER_FIELD_ID,
  FieldPropertySO.JSON_PROPERTY_COLLECT_TYPE,
  FieldPropertySO.JSON_PROPERTY_COMMA_STYLE,
  FieldPropertySO.JSON_PROPERTY_DATASHEET_ID,
  FieldPropertySO.JSON_PROPERTY_DATE_FORMAT,
  FieldPropertySO.JSON_PROPERTY_DEFAULT_VALUE,
  FieldPropertySO.JSON_PROPERTY_EXPRESSION,
  FieldPropertySO.JSON_PROPERTY_FIELD_ID_COLLECTION,
  FieldPropertySO.JSON_PROPERTY_FILTER_INFO,
  FieldPropertySO.JSON_PROPERTY_FOREIGN_DATASHEET_ID,
  FieldPropertySO.JSON_PROPERTY_FORMATTING,
  FieldPropertySO.JSON_PROPERTY_FULL_LINKED_FIELDS,
  FieldPropertySO.JSON_PROPERTY_ICON,
  FieldPropertySO.JSON_PROPERTY_INCLUDE_TIME,
  FieldPropertySO.JSON_PROPERTY_INCLUDE_TIME_ZONE,
  FieldPropertySO.JSON_PROPERTY_IS_MULTI,
  FieldPropertySO.JSON_PROPERTY_IS_RECOG_URL_FLAG,
  FieldPropertySO.JSON_PROPERTY_LIMIT_SINGLE_RECORD,
  FieldPropertySO.JSON_PROPERTY_LIMIT_TO_VIEW,
  FieldPropertySO.JSON_PROPERTY_LINKED_DATASHEET_ID,
  FieldPropertySO.JSON_PROPERTY_LINKED_FIELDS,
  FieldPropertySO.JSON_PROPERTY_LINKED_VIEW_ID,
  FieldPropertySO.JSON_PROPERTY_LOOK_UP_LIMIT,
  FieldPropertySO.JSON_PROPERTY_LOOK_UP_TARGET_FIELD_ID,
  FieldPropertySO.JSON_PROPERTY_MAX,
  FieldPropertySO.JSON_PROPERTY_NEXT_ID,
  FieldPropertySO.JSON_PROPERTY_OPEN_FILTER,
  FieldPropertySO.JSON_PROPERTY_OPTIONS,
  FieldPropertySO.JSON_PROPERTY_PRECISION,
  FieldPropertySO.JSON_PROPERTY_RELATED_LINK_FIELD_ID,
  FieldPropertySO.JSON_PROPERTY_ROLL_UP_TYPE,
  FieldPropertySO.JSON_PROPERTY_SHOULD_SEND_MSG,
  FieldPropertySO.JSON_PROPERTY_SHOW_ALL,
  FieldPropertySO.JSON_PROPERTY_SORT_INFO,
  FieldPropertySO.JSON_PROPERTY_SUBSCRIPTION,
  FieldPropertySO.JSON_PROPERTY_SYMBOL,
  FieldPropertySO.JSON_PROPERTY_SYMBOL_ALIGN,
  FieldPropertySO.JSON_PROPERTY_TIME_FORMAT,
  FieldPropertySO.JSON_PROPERTY_TIME_ZONE,
  FieldPropertySO.JSON_PROPERTY_UNIT_IDS,
  FieldPropertySO.JSON_PROPERTY_UUIDS,
  FieldPropertySO.JSON_PROPERTY_VIEW_IDX
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class FieldPropertySO {
  public static final String JSON_PROPERTY_AUTO_FILL = "autoFill";
  private JsonNullable<Boolean> autoFill = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_BROTHER_FIELD_ID = "brotherFieldId";
  private JsonNullable<String> brotherFieldId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_COLLECT_TYPE = "collectType";
  private JsonNullable<CollectType> collectType = JsonNullable.<CollectType>undefined();

  public static final String JSON_PROPERTY_COMMA_STYLE = "commaStyle";
  private JsonNullable<String> commaStyle = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DATASHEET_ID = "datasheetId";
  private JsonNullable<String> datasheetId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DATE_FORMAT = "dateFormat";
  private JsonNullable<DateFormat> dateFormat = JsonNullable.<DateFormat>undefined();

  public static final String JSON_PROPERTY_DEFAULT_VALUE = "defaultValue";
  private JsonNullable<Object> defaultValue = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_EXPRESSION = "expression";
  private JsonNullable<String> expression = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FIELD_ID_COLLECTION = "fieldIdCollection";
  private JsonNullable<List<String>> fieldIdCollection = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_FILTER_INFO = "filterInfo";
  private JsonNullable<IFilterInfo> filterInfo = JsonNullable.<IFilterInfo>undefined();

  public static final String JSON_PROPERTY_FOREIGN_DATASHEET_ID = "foreignDatasheetId";
  private JsonNullable<String> foreignDatasheetId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FORMATTING = "formatting";
  private JsonNullable<Object> formatting = JsonNullable.<Object>undefined();

  public static final String JSON_PROPERTY_FULL_LINKED_FIELDS = "fullLinkedFields";
  private JsonNullable<List<LinkedFields>> fullLinkedFields = JsonNullable.<List<LinkedFields>>undefined();

  public static final String JSON_PROPERTY_ICON = "icon";
  private JsonNullable<String> icon = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_INCLUDE_TIME = "includeTime";
  private JsonNullable<Boolean> includeTime = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_INCLUDE_TIME_ZONE = "includeTimeZone";
  private JsonNullable<Boolean> includeTimeZone = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_IS_MULTI = "isMulti";
  private JsonNullable<Boolean> isMulti = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_IS_RECOG_URL_FLAG = "isRecogUrlFlag";
  private JsonNullable<Boolean> isRecogUrlFlag = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_LIMIT_SINGLE_RECORD = "limitSingleRecord";
  private JsonNullable<Boolean> limitSingleRecord = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_LIMIT_TO_VIEW = "limitToView";
  private JsonNullable<String> limitToView = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LINKED_DATASHEET_ID = "linkedDatasheetId";
  private JsonNullable<String> linkedDatasheetId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LINKED_FIELDS = "linkedFields";
  private JsonNullable<List<LinkedFields>> linkedFields = JsonNullable.<List<LinkedFields>>undefined();

  public static final String JSON_PROPERTY_LINKED_VIEW_ID = "linkedViewId";
  private JsonNullable<String> linkedViewId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOOK_UP_LIMIT = "lookUpLimit";
  private JsonNullable<LookUpLimitType> lookUpLimit = JsonNullable.<LookUpLimitType>undefined();

  public static final String JSON_PROPERTY_LOOK_UP_TARGET_FIELD_ID = "lookUpTargetFieldId";
  private JsonNullable<String> lookUpTargetFieldId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MAX = "max";
  private JsonNullable<Integer> max = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_NEXT_ID = "nextId";
  private JsonNullable<Integer> nextId = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_OPEN_FILTER = "openFilter";
  private JsonNullable<Boolean> openFilter = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_OPTIONS = "options";
  private JsonNullable<List<SingleSelectProperty>> options = JsonNullable.<List<SingleSelectProperty>>undefined();

  public static final String JSON_PROPERTY_PRECISION = "precision";
  private JsonNullable<Integer> precision = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_RELATED_LINK_FIELD_ID = "relatedLinkFieldId";
  private JsonNullable<String> relatedLinkFieldId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ROLL_UP_TYPE = "rollUpType";
  private JsonNullable<RollUpFuncType> rollUpType = JsonNullable.<RollUpFuncType>undefined();

  public static final String JSON_PROPERTY_SHOULD_SEND_MSG = "shouldSendMsg";
  private JsonNullable<Boolean> shouldSendMsg = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_SHOW_ALL = "showAll";
  private JsonNullable<Boolean> showAll = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_SORT_INFO = "sortInfo";
  private JsonNullable<LookUpSortInfo> sortInfo = JsonNullable.<LookUpSortInfo>undefined();

  public static final String JSON_PROPERTY_SUBSCRIPTION = "subscription";
  private JsonNullable<Boolean> subscription = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_SYMBOL = "symbol";
  private JsonNullable<String> symbol = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SYMBOL_ALIGN = "symbolAlign";
  private JsonNullable<SymbolAlign> symbolAlign = JsonNullable.<SymbolAlign>undefined();

  public static final String JSON_PROPERTY_TIME_FORMAT = "timeFormat";
  private JsonNullable<TimeFormat> timeFormat = JsonNullable.<TimeFormat>undefined();

  public static final String JSON_PROPERTY_TIME_ZONE = "timeZone";
  private JsonNullable<String> timeZone = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_UNIT_IDS = "unitIds";
  private JsonNullable<List<String>> unitIds = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_UUIDS = "uuids";
  private JsonNullable<List<String>> uuids = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_VIEW_IDX = "viewIdx";
  private JsonNullable<Integer> viewIdx = JsonNullable.<Integer>undefined();

  public FieldPropertySO() {
  }

  public FieldPropertySO autoFill(Boolean autoFill) {
    this.autoFill = JsonNullable.<Boolean>of(autoFill);
    
    return this;
  }

   /**
   * Get autoFill
   * @return autoFill
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Boolean getAutoFill() {
        return autoFill.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUTO_FILL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getAutoFill_JsonNullable() {
    return autoFill;
  }
  
  @JsonProperty(JSON_PROPERTY_AUTO_FILL)
  public void setAutoFill_JsonNullable(JsonNullable<Boolean> autoFill) {
    this.autoFill = autoFill;
  }

  public void setAutoFill(Boolean autoFill) {
    this.autoFill = JsonNullable.<Boolean>of(autoFill);
  }


  public FieldPropertySO brotherFieldId(String brotherFieldId) {
    this.brotherFieldId = JsonNullable.<String>of(brotherFieldId);
    
    return this;
  }

   /**
   * Get brotherFieldId
   * @return brotherFieldId
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getBrotherFieldId() {
        return brotherFieldId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BROTHER_FIELD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getBrotherFieldId_JsonNullable() {
    return brotherFieldId;
  }
  
  @JsonProperty(JSON_PROPERTY_BROTHER_FIELD_ID)
  public void setBrotherFieldId_JsonNullable(JsonNullable<String> brotherFieldId) {
    this.brotherFieldId = brotherFieldId;
  }

  public void setBrotherFieldId(String brotherFieldId) {
    this.brotherFieldId = JsonNullable.<String>of(brotherFieldId);
  }


  public FieldPropertySO collectType(CollectType collectType) {
    this.collectType = JsonNullable.<CollectType>of(collectType);
    
    return this;
  }

   /**
   * Get collectType
   * @return collectType
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public CollectType getCollectType() {
        return collectType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COLLECT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<CollectType> getCollectType_JsonNullable() {
    return collectType;
  }
  
  @JsonProperty(JSON_PROPERTY_COLLECT_TYPE)
  public void setCollectType_JsonNullable(JsonNullable<CollectType> collectType) {
    this.collectType = collectType;
  }

  public void setCollectType(CollectType collectType) {
    this.collectType = JsonNullable.<CollectType>of(collectType);
  }


  public FieldPropertySO commaStyle(String commaStyle) {
    this.commaStyle = JsonNullable.<String>of(commaStyle);
    
    return this;
  }

   /**
   * Get commaStyle
   * @return commaStyle
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getCommaStyle() {
        return commaStyle.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COMMA_STYLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCommaStyle_JsonNullable() {
    return commaStyle;
  }
  
  @JsonProperty(JSON_PROPERTY_COMMA_STYLE)
  public void setCommaStyle_JsonNullable(JsonNullable<String> commaStyle) {
    this.commaStyle = commaStyle;
  }

  public void setCommaStyle(String commaStyle) {
    this.commaStyle = JsonNullable.<String>of(commaStyle);
  }


  public FieldPropertySO datasheetId(String datasheetId) {
    this.datasheetId = JsonNullable.<String>of(datasheetId);
    
    return this;
  }

   /**
   * Get datasheetId
   * @return datasheetId
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getDatasheetId() {
        return datasheetId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DATASHEET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDatasheetId_JsonNullable() {
    return datasheetId;
  }
  
  @JsonProperty(JSON_PROPERTY_DATASHEET_ID)
  public void setDatasheetId_JsonNullable(JsonNullable<String> datasheetId) {
    this.datasheetId = datasheetId;
  }

  public void setDatasheetId(String datasheetId) {
    this.datasheetId = JsonNullable.<String>of(datasheetId);
  }


  public FieldPropertySO dateFormat(DateFormat dateFormat) {
    this.dateFormat = JsonNullable.<DateFormat>of(dateFormat);
    
    return this;
  }

   /**
   * Get dateFormat
   * @return dateFormat
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public DateFormat getDateFormat() {
        return dateFormat.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DATE_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<DateFormat> getDateFormat_JsonNullable() {
    return dateFormat;
  }
  
  @JsonProperty(JSON_PROPERTY_DATE_FORMAT)
  public void setDateFormat_JsonNullable(JsonNullable<DateFormat> dateFormat) {
    this.dateFormat = dateFormat;
  }

  public void setDateFormat(DateFormat dateFormat) {
    this.dateFormat = JsonNullable.<DateFormat>of(dateFormat);
  }


  public FieldPropertySO defaultValue(Object defaultValue) {
    this.defaultValue = JsonNullable.<Object>of(defaultValue);
    
    return this;
  }

   /**
   * Get defaultValue
   * @return defaultValue
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getDefaultValue() {
        return defaultValue.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DEFAULT_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getDefaultValue_JsonNullable() {
    return defaultValue;
  }
  
  @JsonProperty(JSON_PROPERTY_DEFAULT_VALUE)
  public void setDefaultValue_JsonNullable(JsonNullable<Object> defaultValue) {
    this.defaultValue = defaultValue;
  }

  public void setDefaultValue(Object defaultValue) {
    this.defaultValue = JsonNullable.<Object>of(defaultValue);
  }


  public FieldPropertySO expression(String expression) {
    this.expression = JsonNullable.<String>of(expression);
    
    return this;
  }

   /**
   * Get expression
   * @return expression
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getExpression() {
        return expression.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXPRESSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getExpression_JsonNullable() {
    return expression;
  }
  
  @JsonProperty(JSON_PROPERTY_EXPRESSION)
  public void setExpression_JsonNullable(JsonNullable<String> expression) {
    this.expression = expression;
  }

  public void setExpression(String expression) {
    this.expression = JsonNullable.<String>of(expression);
  }


  public FieldPropertySO fieldIdCollection(List<String> fieldIdCollection) {
    this.fieldIdCollection = JsonNullable.<List<String>>of(fieldIdCollection);
    
    return this;
  }

  public FieldPropertySO addFieldIdCollectionItem(String fieldIdCollectionItem) {
    if (this.fieldIdCollection == null || !this.fieldIdCollection.isPresent()) {
      this.fieldIdCollection = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.fieldIdCollection.get().add(fieldIdCollectionItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get fieldIdCollection
   * @return fieldIdCollection
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public List<String> getFieldIdCollection() {
        return fieldIdCollection.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FIELD_ID_COLLECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getFieldIdCollection_JsonNullable() {
    return fieldIdCollection;
  }
  
  @JsonProperty(JSON_PROPERTY_FIELD_ID_COLLECTION)
  public void setFieldIdCollection_JsonNullable(JsonNullable<List<String>> fieldIdCollection) {
    this.fieldIdCollection = fieldIdCollection;
  }

  public void setFieldIdCollection(List<String> fieldIdCollection) {
    this.fieldIdCollection = JsonNullable.<List<String>>of(fieldIdCollection);
  }


  public FieldPropertySO filterInfo(IFilterInfo filterInfo) {
    this.filterInfo = JsonNullable.<IFilterInfo>of(filterInfo);
    
    return this;
  }

   /**
   * Get filterInfo
   * @return filterInfo
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public IFilterInfo getFilterInfo() {
        return filterInfo.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FILTER_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<IFilterInfo> getFilterInfo_JsonNullable() {
    return filterInfo;
  }
  
  @JsonProperty(JSON_PROPERTY_FILTER_INFO)
  public void setFilterInfo_JsonNullable(JsonNullable<IFilterInfo> filterInfo) {
    this.filterInfo = filterInfo;
  }

  public void setFilterInfo(IFilterInfo filterInfo) {
    this.filterInfo = JsonNullable.<IFilterInfo>of(filterInfo);
  }


  public FieldPropertySO foreignDatasheetId(String foreignDatasheetId) {
    this.foreignDatasheetId = JsonNullable.<String>of(foreignDatasheetId);
    
    return this;
  }

   /**
   * Get foreignDatasheetId
   * @return foreignDatasheetId
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getForeignDatasheetId() {
        return foreignDatasheetId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FOREIGN_DATASHEET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getForeignDatasheetId_JsonNullable() {
    return foreignDatasheetId;
  }
  
  @JsonProperty(JSON_PROPERTY_FOREIGN_DATASHEET_ID)
  public void setForeignDatasheetId_JsonNullable(JsonNullable<String> foreignDatasheetId) {
    this.foreignDatasheetId = foreignDatasheetId;
  }

  public void setForeignDatasheetId(String foreignDatasheetId) {
    this.foreignDatasheetId = JsonNullable.<String>of(foreignDatasheetId);
  }


  public FieldPropertySO formatting(Object formatting) {
    this.formatting = JsonNullable.<Object>of(formatting);
    
    return this;
  }

   /**
   * Get formatting
   * @return formatting
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getFormatting() {
        return formatting.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FORMATTING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getFormatting_JsonNullable() {
    return formatting;
  }
  
  @JsonProperty(JSON_PROPERTY_FORMATTING)
  public void setFormatting_JsonNullable(JsonNullable<Object> formatting) {
    this.formatting = formatting;
  }

  public void setFormatting(Object formatting) {
    this.formatting = JsonNullable.<Object>of(formatting);
  }


  public FieldPropertySO fullLinkedFields(List<LinkedFields> fullLinkedFields) {
    this.fullLinkedFields = JsonNullable.<List<LinkedFields>>of(fullLinkedFields);
    
    return this;
  }

  public FieldPropertySO addFullLinkedFieldsItem(LinkedFields fullLinkedFieldsItem) {
    if (this.fullLinkedFields == null || !this.fullLinkedFields.isPresent()) {
      this.fullLinkedFields = JsonNullable.<List<LinkedFields>>of(new ArrayList<>());
    }
    try {
      this.fullLinkedFields.get().add(fullLinkedFieldsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get fullLinkedFields
   * @return fullLinkedFields
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public List<LinkedFields> getFullLinkedFields() {
        return fullLinkedFields.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FULL_LINKED_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<LinkedFields>> getFullLinkedFields_JsonNullable() {
    return fullLinkedFields;
  }
  
  @JsonProperty(JSON_PROPERTY_FULL_LINKED_FIELDS)
  public void setFullLinkedFields_JsonNullable(JsonNullable<List<LinkedFields>> fullLinkedFields) {
    this.fullLinkedFields = fullLinkedFields;
  }

  public void setFullLinkedFields(List<LinkedFields> fullLinkedFields) {
    this.fullLinkedFields = JsonNullable.<List<LinkedFields>>of(fullLinkedFields);
  }


  public FieldPropertySO icon(String icon) {
    this.icon = JsonNullable.<String>of(icon);
    
    return this;
  }

   /**
   * Get icon
   * @return icon
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getIcon() {
        return icon.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ICON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIcon_JsonNullable() {
    return icon;
  }
  
  @JsonProperty(JSON_PROPERTY_ICON)
  public void setIcon_JsonNullable(JsonNullable<String> icon) {
    this.icon = icon;
  }

  public void setIcon(String icon) {
    this.icon = JsonNullable.<String>of(icon);
  }


  public FieldPropertySO includeTime(Boolean includeTime) {
    this.includeTime = JsonNullable.<Boolean>of(includeTime);
    
    return this;
  }

   /**
   * Get includeTime
   * @return includeTime
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Boolean getIncludeTime() {
        return includeTime.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INCLUDE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getIncludeTime_JsonNullable() {
    return includeTime;
  }
  
  @JsonProperty(JSON_PROPERTY_INCLUDE_TIME)
  public void setIncludeTime_JsonNullable(JsonNullable<Boolean> includeTime) {
    this.includeTime = includeTime;
  }

  public void setIncludeTime(Boolean includeTime) {
    this.includeTime = JsonNullable.<Boolean>of(includeTime);
  }


  public FieldPropertySO includeTimeZone(Boolean includeTimeZone) {
    this.includeTimeZone = JsonNullable.<Boolean>of(includeTimeZone);
    
    return this;
  }

   /**
   * Get includeTimeZone
   * @return includeTimeZone
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Boolean getIncludeTimeZone() {
        return includeTimeZone.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INCLUDE_TIME_ZONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getIncludeTimeZone_JsonNullable() {
    return includeTimeZone;
  }
  
  @JsonProperty(JSON_PROPERTY_INCLUDE_TIME_ZONE)
  public void setIncludeTimeZone_JsonNullable(JsonNullable<Boolean> includeTimeZone) {
    this.includeTimeZone = includeTimeZone;
  }

  public void setIncludeTimeZone(Boolean includeTimeZone) {
    this.includeTimeZone = JsonNullable.<Boolean>of(includeTimeZone);
  }


  public FieldPropertySO isMulti(Boolean isMulti) {
    this.isMulti = JsonNullable.<Boolean>of(isMulti);
    
    return this;
  }

   /**
   * Get isMulti
   * @return isMulti
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Boolean getIsMulti() {
        return isMulti.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IS_MULTI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getIsMulti_JsonNullable() {
    return isMulti;
  }
  
  @JsonProperty(JSON_PROPERTY_IS_MULTI)
  public void setIsMulti_JsonNullable(JsonNullable<Boolean> isMulti) {
    this.isMulti = isMulti;
  }

  public void setIsMulti(Boolean isMulti) {
    this.isMulti = JsonNullable.<Boolean>of(isMulti);
  }


  public FieldPropertySO isRecogUrlFlag(Boolean isRecogUrlFlag) {
    this.isRecogUrlFlag = JsonNullable.<Boolean>of(isRecogUrlFlag);
    
    return this;
  }

   /**
   * Get isRecogUrlFlag
   * @return isRecogUrlFlag
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Boolean getIsRecogUrlFlag() {
        return isRecogUrlFlag.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IS_RECOG_URL_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getIsRecogUrlFlag_JsonNullable() {
    return isRecogUrlFlag;
  }
  
  @JsonProperty(JSON_PROPERTY_IS_RECOG_URL_FLAG)
  public void setIsRecogUrlFlag_JsonNullable(JsonNullable<Boolean> isRecogUrlFlag) {
    this.isRecogUrlFlag = isRecogUrlFlag;
  }

  public void setIsRecogUrlFlag(Boolean isRecogUrlFlag) {
    this.isRecogUrlFlag = JsonNullable.<Boolean>of(isRecogUrlFlag);
  }


  public FieldPropertySO limitSingleRecord(Boolean limitSingleRecord) {
    this.limitSingleRecord = JsonNullable.<Boolean>of(limitSingleRecord);
    
    return this;
  }

   /**
   * Get limitSingleRecord
   * @return limitSingleRecord
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Boolean getLimitSingleRecord() {
        return limitSingleRecord.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LIMIT_SINGLE_RECORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getLimitSingleRecord_JsonNullable() {
    return limitSingleRecord;
  }
  
  @JsonProperty(JSON_PROPERTY_LIMIT_SINGLE_RECORD)
  public void setLimitSingleRecord_JsonNullable(JsonNullable<Boolean> limitSingleRecord) {
    this.limitSingleRecord = limitSingleRecord;
  }

  public void setLimitSingleRecord(Boolean limitSingleRecord) {
    this.limitSingleRecord = JsonNullable.<Boolean>of(limitSingleRecord);
  }


  public FieldPropertySO limitToView(String limitToView) {
    this.limitToView = JsonNullable.<String>of(limitToView);
    
    return this;
  }

   /**
   * Get limitToView
   * @return limitToView
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getLimitToView() {
        return limitToView.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LIMIT_TO_VIEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLimitToView_JsonNullable() {
    return limitToView;
  }
  
  @JsonProperty(JSON_PROPERTY_LIMIT_TO_VIEW)
  public void setLimitToView_JsonNullable(JsonNullable<String> limitToView) {
    this.limitToView = limitToView;
  }

  public void setLimitToView(String limitToView) {
    this.limitToView = JsonNullable.<String>of(limitToView);
  }


  public FieldPropertySO linkedDatasheetId(String linkedDatasheetId) {
    this.linkedDatasheetId = JsonNullable.<String>of(linkedDatasheetId);
    
    return this;
  }

   /**
   * Get linkedDatasheetId
   * @return linkedDatasheetId
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getLinkedDatasheetId() {
        return linkedDatasheetId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LINKED_DATASHEET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLinkedDatasheetId_JsonNullable() {
    return linkedDatasheetId;
  }
  
  @JsonProperty(JSON_PROPERTY_LINKED_DATASHEET_ID)
  public void setLinkedDatasheetId_JsonNullable(JsonNullable<String> linkedDatasheetId) {
    this.linkedDatasheetId = linkedDatasheetId;
  }

  public void setLinkedDatasheetId(String linkedDatasheetId) {
    this.linkedDatasheetId = JsonNullable.<String>of(linkedDatasheetId);
  }


  public FieldPropertySO linkedFields(List<LinkedFields> linkedFields) {
    this.linkedFields = JsonNullable.<List<LinkedFields>>of(linkedFields);
    
    return this;
  }

  public FieldPropertySO addLinkedFieldsItem(LinkedFields linkedFieldsItem) {
    if (this.linkedFields == null || !this.linkedFields.isPresent()) {
      this.linkedFields = JsonNullable.<List<LinkedFields>>of(new ArrayList<>());
    }
    try {
      this.linkedFields.get().add(linkedFieldsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get linkedFields
   * @return linkedFields
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public List<LinkedFields> getLinkedFields() {
        return linkedFields.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LINKED_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<LinkedFields>> getLinkedFields_JsonNullable() {
    return linkedFields;
  }
  
  @JsonProperty(JSON_PROPERTY_LINKED_FIELDS)
  public void setLinkedFields_JsonNullable(JsonNullable<List<LinkedFields>> linkedFields) {
    this.linkedFields = linkedFields;
  }

  public void setLinkedFields(List<LinkedFields> linkedFields) {
    this.linkedFields = JsonNullable.<List<LinkedFields>>of(linkedFields);
  }


  public FieldPropertySO linkedViewId(String linkedViewId) {
    this.linkedViewId = JsonNullable.<String>of(linkedViewId);
    
    return this;
  }

   /**
   * Get linkedViewId
   * @return linkedViewId
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getLinkedViewId() {
        return linkedViewId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LINKED_VIEW_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLinkedViewId_JsonNullable() {
    return linkedViewId;
  }
  
  @JsonProperty(JSON_PROPERTY_LINKED_VIEW_ID)
  public void setLinkedViewId_JsonNullable(JsonNullable<String> linkedViewId) {
    this.linkedViewId = linkedViewId;
  }

  public void setLinkedViewId(String linkedViewId) {
    this.linkedViewId = JsonNullable.<String>of(linkedViewId);
  }


  public FieldPropertySO lookUpLimit(LookUpLimitType lookUpLimit) {
    this.lookUpLimit = JsonNullable.<LookUpLimitType>of(lookUpLimit);
    
    return this;
  }

   /**
   * Get lookUpLimit
   * @return lookUpLimit
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public LookUpLimitType getLookUpLimit() {
        return lookUpLimit.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOOK_UP_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LookUpLimitType> getLookUpLimit_JsonNullable() {
    return lookUpLimit;
  }
  
  @JsonProperty(JSON_PROPERTY_LOOK_UP_LIMIT)
  public void setLookUpLimit_JsonNullable(JsonNullable<LookUpLimitType> lookUpLimit) {
    this.lookUpLimit = lookUpLimit;
  }

  public void setLookUpLimit(LookUpLimitType lookUpLimit) {
    this.lookUpLimit = JsonNullable.<LookUpLimitType>of(lookUpLimit);
  }


  public FieldPropertySO lookUpTargetFieldId(String lookUpTargetFieldId) {
    this.lookUpTargetFieldId = JsonNullable.<String>of(lookUpTargetFieldId);
    
    return this;
  }

   /**
   * Get lookUpTargetFieldId
   * @return lookUpTargetFieldId
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getLookUpTargetFieldId() {
        return lookUpTargetFieldId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOOK_UP_TARGET_FIELD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLookUpTargetFieldId_JsonNullable() {
    return lookUpTargetFieldId;
  }
  
  @JsonProperty(JSON_PROPERTY_LOOK_UP_TARGET_FIELD_ID)
  public void setLookUpTargetFieldId_JsonNullable(JsonNullable<String> lookUpTargetFieldId) {
    this.lookUpTargetFieldId = lookUpTargetFieldId;
  }

  public void setLookUpTargetFieldId(String lookUpTargetFieldId) {
    this.lookUpTargetFieldId = JsonNullable.<String>of(lookUpTargetFieldId);
  }


  public FieldPropertySO max(Integer max) {
    this.max = JsonNullable.<Integer>of(max);
    
    return this;
  }

   /**
   * Get max
   * minimum: 0
   * @return max
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Integer getMax() {
        return max.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getMax_JsonNullable() {
    return max;
  }
  
  @JsonProperty(JSON_PROPERTY_MAX)
  public void setMax_JsonNullable(JsonNullable<Integer> max) {
    this.max = max;
  }

  public void setMax(Integer max) {
    this.max = JsonNullable.<Integer>of(max);
  }


  public FieldPropertySO nextId(Integer nextId) {
    this.nextId = JsonNullable.<Integer>of(nextId);
    
    return this;
  }

   /**
   * Get nextId
   * @return nextId
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Integer getNextId() {
        return nextId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NEXT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getNextId_JsonNullable() {
    return nextId;
  }
  
  @JsonProperty(JSON_PROPERTY_NEXT_ID)
  public void setNextId_JsonNullable(JsonNullable<Integer> nextId) {
    this.nextId = nextId;
  }

  public void setNextId(Integer nextId) {
    this.nextId = JsonNullable.<Integer>of(nextId);
  }


  public FieldPropertySO openFilter(Boolean openFilter) {
    this.openFilter = JsonNullable.<Boolean>of(openFilter);
    
    return this;
  }

   /**
   * Get openFilter
   * @return openFilter
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Boolean getOpenFilter() {
        return openFilter.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OPEN_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getOpenFilter_JsonNullable() {
    return openFilter;
  }
  
  @JsonProperty(JSON_PROPERTY_OPEN_FILTER)
  public void setOpenFilter_JsonNullable(JsonNullable<Boolean> openFilter) {
    this.openFilter = openFilter;
  }

  public void setOpenFilter(Boolean openFilter) {
    this.openFilter = JsonNullable.<Boolean>of(openFilter);
  }


  public FieldPropertySO options(List<SingleSelectProperty> options) {
    this.options = JsonNullable.<List<SingleSelectProperty>>of(options);
    
    return this;
  }

  public FieldPropertySO addOptionsItem(SingleSelectProperty optionsItem) {
    if (this.options == null || !this.options.isPresent()) {
      this.options = JsonNullable.<List<SingleSelectProperty>>of(new ArrayList<>());
    }
    try {
      this.options.get().add(optionsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get options
   * @return options
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public List<SingleSelectProperty> getOptions() {
        return options.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<SingleSelectProperty>> getOptions_JsonNullable() {
    return options;
  }
  
  @JsonProperty(JSON_PROPERTY_OPTIONS)
  public void setOptions_JsonNullable(JsonNullable<List<SingleSelectProperty>> options) {
    this.options = options;
  }

  public void setOptions(List<SingleSelectProperty> options) {
    this.options = JsonNullable.<List<SingleSelectProperty>>of(options);
  }


  public FieldPropertySO precision(Integer precision) {
    this.precision = JsonNullable.<Integer>of(precision);
    
    return this;
  }

   /**
   * Get precision
   * @return precision
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Integer getPrecision() {
        return precision.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRECISION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getPrecision_JsonNullable() {
    return precision;
  }
  
  @JsonProperty(JSON_PROPERTY_PRECISION)
  public void setPrecision_JsonNullable(JsonNullable<Integer> precision) {
    this.precision = precision;
  }

  public void setPrecision(Integer precision) {
    this.precision = JsonNullable.<Integer>of(precision);
  }


  public FieldPropertySO relatedLinkFieldId(String relatedLinkFieldId) {
    this.relatedLinkFieldId = JsonNullable.<String>of(relatedLinkFieldId);
    
    return this;
  }

   /**
   * Get relatedLinkFieldId
   * @return relatedLinkFieldId
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getRelatedLinkFieldId() {
        return relatedLinkFieldId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RELATED_LINK_FIELD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getRelatedLinkFieldId_JsonNullable() {
    return relatedLinkFieldId;
  }
  
  @JsonProperty(JSON_PROPERTY_RELATED_LINK_FIELD_ID)
  public void setRelatedLinkFieldId_JsonNullable(JsonNullable<String> relatedLinkFieldId) {
    this.relatedLinkFieldId = relatedLinkFieldId;
  }

  public void setRelatedLinkFieldId(String relatedLinkFieldId) {
    this.relatedLinkFieldId = JsonNullable.<String>of(relatedLinkFieldId);
  }


  public FieldPropertySO rollUpType(RollUpFuncType rollUpType) {
    this.rollUpType = JsonNullable.<RollUpFuncType>of(rollUpType);
    
    return this;
  }

   /**
   * Get rollUpType
   * @return rollUpType
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public RollUpFuncType getRollUpType() {
        return rollUpType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ROLL_UP_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<RollUpFuncType> getRollUpType_JsonNullable() {
    return rollUpType;
  }
  
  @JsonProperty(JSON_PROPERTY_ROLL_UP_TYPE)
  public void setRollUpType_JsonNullable(JsonNullable<RollUpFuncType> rollUpType) {
    this.rollUpType = rollUpType;
  }

  public void setRollUpType(RollUpFuncType rollUpType) {
    this.rollUpType = JsonNullable.<RollUpFuncType>of(rollUpType);
  }


  public FieldPropertySO shouldSendMsg(Boolean shouldSendMsg) {
    this.shouldSendMsg = JsonNullable.<Boolean>of(shouldSendMsg);
    
    return this;
  }

   /**
   * Get shouldSendMsg
   * @return shouldSendMsg
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Boolean getShouldSendMsg() {
        return shouldSendMsg.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SHOULD_SEND_MSG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getShouldSendMsg_JsonNullable() {
    return shouldSendMsg;
  }
  
  @JsonProperty(JSON_PROPERTY_SHOULD_SEND_MSG)
  public void setShouldSendMsg_JsonNullable(JsonNullable<Boolean> shouldSendMsg) {
    this.shouldSendMsg = shouldSendMsg;
  }

  public void setShouldSendMsg(Boolean shouldSendMsg) {
    this.shouldSendMsg = JsonNullable.<Boolean>of(shouldSendMsg);
  }


  public FieldPropertySO showAll(Boolean showAll) {
    this.showAll = JsonNullable.<Boolean>of(showAll);
    
    return this;
  }

   /**
   * Get showAll
   * @return showAll
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Boolean getShowAll() {
        return showAll.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SHOW_ALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getShowAll_JsonNullable() {
    return showAll;
  }
  
  @JsonProperty(JSON_PROPERTY_SHOW_ALL)
  public void setShowAll_JsonNullable(JsonNullable<Boolean> showAll) {
    this.showAll = showAll;
  }

  public void setShowAll(Boolean showAll) {
    this.showAll = JsonNullable.<Boolean>of(showAll);
  }


  public FieldPropertySO sortInfo(LookUpSortInfo sortInfo) {
    this.sortInfo = JsonNullable.<LookUpSortInfo>of(sortInfo);
    
    return this;
  }

   /**
   * Get sortInfo
   * @return sortInfo
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public LookUpSortInfo getSortInfo() {
        return sortInfo.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SORT_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LookUpSortInfo> getSortInfo_JsonNullable() {
    return sortInfo;
  }
  
  @JsonProperty(JSON_PROPERTY_SORT_INFO)
  public void setSortInfo_JsonNullable(JsonNullable<LookUpSortInfo> sortInfo) {
    this.sortInfo = sortInfo;
  }

  public void setSortInfo(LookUpSortInfo sortInfo) {
    this.sortInfo = JsonNullable.<LookUpSortInfo>of(sortInfo);
  }


  public FieldPropertySO subscription(Boolean subscription) {
    this.subscription = JsonNullable.<Boolean>of(subscription);
    
    return this;
  }

   /**
   * Get subscription
   * @return subscription
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Boolean getSubscription() {
        return subscription.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getSubscription_JsonNullable() {
    return subscription;
  }
  
  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION)
  public void setSubscription_JsonNullable(JsonNullable<Boolean> subscription) {
    this.subscription = subscription;
  }

  public void setSubscription(Boolean subscription) {
    this.subscription = JsonNullable.<Boolean>of(subscription);
  }


  public FieldPropertySO symbol(String symbol) {
    this.symbol = JsonNullable.<String>of(symbol);
    
    return this;
  }

   /**
   * Get symbol
   * @return symbol
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getSymbol() {
        return symbol.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSymbol_JsonNullable() {
    return symbol;
  }
  
  @JsonProperty(JSON_PROPERTY_SYMBOL)
  public void setSymbol_JsonNullable(JsonNullable<String> symbol) {
    this.symbol = symbol;
  }

  public void setSymbol(String symbol) {
    this.symbol = JsonNullable.<String>of(symbol);
  }


  public FieldPropertySO symbolAlign(SymbolAlign symbolAlign) {
    this.symbolAlign = JsonNullable.<SymbolAlign>of(symbolAlign);
    
    return this;
  }

   /**
   * Get symbolAlign
   * @return symbolAlign
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public SymbolAlign getSymbolAlign() {
        return symbolAlign.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SYMBOL_ALIGN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<SymbolAlign> getSymbolAlign_JsonNullable() {
    return symbolAlign;
  }
  
  @JsonProperty(JSON_PROPERTY_SYMBOL_ALIGN)
  public void setSymbolAlign_JsonNullable(JsonNullable<SymbolAlign> symbolAlign) {
    this.symbolAlign = symbolAlign;
  }

  public void setSymbolAlign(SymbolAlign symbolAlign) {
    this.symbolAlign = JsonNullable.<SymbolAlign>of(symbolAlign);
  }


  public FieldPropertySO timeFormat(TimeFormat timeFormat) {
    this.timeFormat = JsonNullable.<TimeFormat>of(timeFormat);
    
    return this;
  }

   /**
   * Get timeFormat
   * @return timeFormat
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public TimeFormat getTimeFormat() {
        return timeFormat.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TIME_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<TimeFormat> getTimeFormat_JsonNullable() {
    return timeFormat;
  }
  
  @JsonProperty(JSON_PROPERTY_TIME_FORMAT)
  public void setTimeFormat_JsonNullable(JsonNullable<TimeFormat> timeFormat) {
    this.timeFormat = timeFormat;
  }

  public void setTimeFormat(TimeFormat timeFormat) {
    this.timeFormat = JsonNullable.<TimeFormat>of(timeFormat);
  }


  public FieldPropertySO timeZone(String timeZone) {
    this.timeZone = JsonNullable.<String>of(timeZone);
    
    return this;
  }

   /**
   * Get timeZone
   * @return timeZone
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getTimeZone() {
        return timeZone.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TIME_ZONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTimeZone_JsonNullable() {
    return timeZone;
  }
  
  @JsonProperty(JSON_PROPERTY_TIME_ZONE)
  public void setTimeZone_JsonNullable(JsonNullable<String> timeZone) {
    this.timeZone = timeZone;
  }

  public void setTimeZone(String timeZone) {
    this.timeZone = JsonNullable.<String>of(timeZone);
  }


  public FieldPropertySO unitIds(List<String> unitIds) {
    this.unitIds = JsonNullable.<List<String>>of(unitIds);
    
    return this;
  }

  public FieldPropertySO addUnitIdsItem(String unitIdsItem) {
    if (this.unitIds == null || !this.unitIds.isPresent()) {
      this.unitIds = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.unitIds.get().add(unitIdsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get unitIds
   * @return unitIds
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public List<String> getUnitIds() {
        return unitIds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UNIT_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getUnitIds_JsonNullable() {
    return unitIds;
  }
  
  @JsonProperty(JSON_PROPERTY_UNIT_IDS)
  public void setUnitIds_JsonNullable(JsonNullable<List<String>> unitIds) {
    this.unitIds = unitIds;
  }

  public void setUnitIds(List<String> unitIds) {
    this.unitIds = JsonNullable.<List<String>>of(unitIds);
  }


  public FieldPropertySO uuids(List<String> uuids) {
    this.uuids = JsonNullable.<List<String>>of(uuids);
    
    return this;
  }

  public FieldPropertySO addUuidsItem(String uuidsItem) {
    if (this.uuids == null || !this.uuids.isPresent()) {
      this.uuids = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.uuids.get().add(uuidsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get uuids
   * @return uuids
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public List<String> getUuids() {
        return uuids.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UUIDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getUuids_JsonNullable() {
    return uuids;
  }
  
  @JsonProperty(JSON_PROPERTY_UUIDS)
  public void setUuids_JsonNullable(JsonNullable<List<String>> uuids) {
    this.uuids = uuids;
  }

  public void setUuids(List<String> uuids) {
    this.uuids = JsonNullable.<List<String>>of(uuids);
  }


  public FieldPropertySO viewIdx(Integer viewIdx) {
    this.viewIdx = JsonNullable.<Integer>of(viewIdx);
    
    return this;
  }

   /**
   * Get viewIdx
   * @return viewIdx
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Integer getViewIdx() {
        return viewIdx.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VIEW_IDX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getViewIdx_JsonNullable() {
    return viewIdx;
  }
  
  @JsonProperty(JSON_PROPERTY_VIEW_IDX)
  public void setViewIdx_JsonNullable(JsonNullable<Integer> viewIdx) {
    this.viewIdx = viewIdx;
  }

  public void setViewIdx(Integer viewIdx) {
    this.viewIdx = JsonNullable.<Integer>of(viewIdx);
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FieldPropertySO fieldPropertySO = (FieldPropertySO) o;
    return equalsNullable(this.autoFill, fieldPropertySO.autoFill) &&
        equalsNullable(this.brotherFieldId, fieldPropertySO.brotherFieldId) &&
        equalsNullable(this.collectType, fieldPropertySO.collectType) &&
        equalsNullable(this.commaStyle, fieldPropertySO.commaStyle) &&
        equalsNullable(this.datasheetId, fieldPropertySO.datasheetId) &&
        equalsNullable(this.dateFormat, fieldPropertySO.dateFormat) &&
        equalsNullable(this.defaultValue, fieldPropertySO.defaultValue) &&
        equalsNullable(this.expression, fieldPropertySO.expression) &&
        equalsNullable(this.fieldIdCollection, fieldPropertySO.fieldIdCollection) &&
        equalsNullable(this.filterInfo, fieldPropertySO.filterInfo) &&
        equalsNullable(this.foreignDatasheetId, fieldPropertySO.foreignDatasheetId) &&
        equalsNullable(this.formatting, fieldPropertySO.formatting) &&
        equalsNullable(this.fullLinkedFields, fieldPropertySO.fullLinkedFields) &&
        equalsNullable(this.icon, fieldPropertySO.icon) &&
        equalsNullable(this.includeTime, fieldPropertySO.includeTime) &&
        equalsNullable(this.includeTimeZone, fieldPropertySO.includeTimeZone) &&
        equalsNullable(this.isMulti, fieldPropertySO.isMulti) &&
        equalsNullable(this.isRecogUrlFlag, fieldPropertySO.isRecogUrlFlag) &&
        equalsNullable(this.limitSingleRecord, fieldPropertySO.limitSingleRecord) &&
        equalsNullable(this.limitToView, fieldPropertySO.limitToView) &&
        equalsNullable(this.linkedDatasheetId, fieldPropertySO.linkedDatasheetId) &&
        equalsNullable(this.linkedFields, fieldPropertySO.linkedFields) &&
        equalsNullable(this.linkedViewId, fieldPropertySO.linkedViewId) &&
        equalsNullable(this.lookUpLimit, fieldPropertySO.lookUpLimit) &&
        equalsNullable(this.lookUpTargetFieldId, fieldPropertySO.lookUpTargetFieldId) &&
        equalsNullable(this.max, fieldPropertySO.max) &&
        equalsNullable(this.nextId, fieldPropertySO.nextId) &&
        equalsNullable(this.openFilter, fieldPropertySO.openFilter) &&
        equalsNullable(this.options, fieldPropertySO.options) &&
        equalsNullable(this.precision, fieldPropertySO.precision) &&
        equalsNullable(this.relatedLinkFieldId, fieldPropertySO.relatedLinkFieldId) &&
        equalsNullable(this.rollUpType, fieldPropertySO.rollUpType) &&
        equalsNullable(this.shouldSendMsg, fieldPropertySO.shouldSendMsg) &&
        equalsNullable(this.showAll, fieldPropertySO.showAll) &&
        equalsNullable(this.sortInfo, fieldPropertySO.sortInfo) &&
        equalsNullable(this.subscription, fieldPropertySO.subscription) &&
        equalsNullable(this.symbol, fieldPropertySO.symbol) &&
        equalsNullable(this.symbolAlign, fieldPropertySO.symbolAlign) &&
        equalsNullable(this.timeFormat, fieldPropertySO.timeFormat) &&
        equalsNullable(this.timeZone, fieldPropertySO.timeZone) &&
        equalsNullable(this.unitIds, fieldPropertySO.unitIds) &&
        equalsNullable(this.uuids, fieldPropertySO.uuids) &&
        equalsNullable(this.viewIdx, fieldPropertySO.viewIdx);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(autoFill), hashCodeNullable(brotherFieldId), hashCodeNullable(collectType), hashCodeNullable(commaStyle), hashCodeNullable(datasheetId), hashCodeNullable(dateFormat), hashCodeNullable(defaultValue), hashCodeNullable(expression), hashCodeNullable(fieldIdCollection), hashCodeNullable(filterInfo), hashCodeNullable(foreignDatasheetId), hashCodeNullable(formatting), hashCodeNullable(fullLinkedFields), hashCodeNullable(icon), hashCodeNullable(includeTime), hashCodeNullable(includeTimeZone), hashCodeNullable(isMulti), hashCodeNullable(isRecogUrlFlag), hashCodeNullable(limitSingleRecord), hashCodeNullable(limitToView), hashCodeNullable(linkedDatasheetId), hashCodeNullable(linkedFields), hashCodeNullable(linkedViewId), hashCodeNullable(lookUpLimit), hashCodeNullable(lookUpTargetFieldId), hashCodeNullable(max), hashCodeNullable(nextId), hashCodeNullable(openFilter), hashCodeNullable(options), hashCodeNullable(precision), hashCodeNullable(relatedLinkFieldId), hashCodeNullable(rollUpType), hashCodeNullable(shouldSendMsg), hashCodeNullable(showAll), hashCodeNullable(sortInfo), hashCodeNullable(subscription), hashCodeNullable(symbol), hashCodeNullable(symbolAlign), hashCodeNullable(timeFormat), hashCodeNullable(timeZone), hashCodeNullable(unitIds), hashCodeNullable(uuids), hashCodeNullable(viewIdx));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FieldPropertySO {\n");
    sb.append("    autoFill: ").append(toIndentedString(autoFill)).append("\n");
    sb.append("    brotherFieldId: ").append(toIndentedString(brotherFieldId)).append("\n");
    sb.append("    collectType: ").append(toIndentedString(collectType)).append("\n");
    sb.append("    commaStyle: ").append(toIndentedString(commaStyle)).append("\n");
    sb.append("    datasheetId: ").append(toIndentedString(datasheetId)).append("\n");
    sb.append("    dateFormat: ").append(toIndentedString(dateFormat)).append("\n");
    sb.append("    defaultValue: ").append(toIndentedString(defaultValue)).append("\n");
    sb.append("    expression: ").append(toIndentedString(expression)).append("\n");
    sb.append("    fieldIdCollection: ").append(toIndentedString(fieldIdCollection)).append("\n");
    sb.append("    filterInfo: ").append(toIndentedString(filterInfo)).append("\n");
    sb.append("    foreignDatasheetId: ").append(toIndentedString(foreignDatasheetId)).append("\n");
    sb.append("    formatting: ").append(toIndentedString(formatting)).append("\n");
    sb.append("    fullLinkedFields: ").append(toIndentedString(fullLinkedFields)).append("\n");
    sb.append("    icon: ").append(toIndentedString(icon)).append("\n");
    sb.append("    includeTime: ").append(toIndentedString(includeTime)).append("\n");
    sb.append("    includeTimeZone: ").append(toIndentedString(includeTimeZone)).append("\n");
    sb.append("    isMulti: ").append(toIndentedString(isMulti)).append("\n");
    sb.append("    isRecogUrlFlag: ").append(toIndentedString(isRecogUrlFlag)).append("\n");
    sb.append("    limitSingleRecord: ").append(toIndentedString(limitSingleRecord)).append("\n");
    sb.append("    limitToView: ").append(toIndentedString(limitToView)).append("\n");
    sb.append("    linkedDatasheetId: ").append(toIndentedString(linkedDatasheetId)).append("\n");
    sb.append("    linkedFields: ").append(toIndentedString(linkedFields)).append("\n");
    sb.append("    linkedViewId: ").append(toIndentedString(linkedViewId)).append("\n");
    sb.append("    lookUpLimit: ").append(toIndentedString(lookUpLimit)).append("\n");
    sb.append("    lookUpTargetFieldId: ").append(toIndentedString(lookUpTargetFieldId)).append("\n");
    sb.append("    max: ").append(toIndentedString(max)).append("\n");
    sb.append("    nextId: ").append(toIndentedString(nextId)).append("\n");
    sb.append("    openFilter: ").append(toIndentedString(openFilter)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    precision: ").append(toIndentedString(precision)).append("\n");
    sb.append("    relatedLinkFieldId: ").append(toIndentedString(relatedLinkFieldId)).append("\n");
    sb.append("    rollUpType: ").append(toIndentedString(rollUpType)).append("\n");
    sb.append("    shouldSendMsg: ").append(toIndentedString(shouldSendMsg)).append("\n");
    sb.append("    showAll: ").append(toIndentedString(showAll)).append("\n");
    sb.append("    sortInfo: ").append(toIndentedString(sortInfo)).append("\n");
    sb.append("    subscription: ").append(toIndentedString(subscription)).append("\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    symbolAlign: ").append(toIndentedString(symbolAlign)).append("\n");
    sb.append("    timeFormat: ").append(toIndentedString(timeFormat)).append("\n");
    sb.append("    timeZone: ").append(toIndentedString(timeZone)).append("\n");
    sb.append("    unitIds: ").append(toIndentedString(unitIds)).append("\n");
    sb.append("    uuids: ").append(toIndentedString(uuids)).append("\n");
    sb.append("    viewIdx: ").append(toIndentedString(viewIdx)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

