/*
 * databus-server
 * databus-server APIs
 *
 * The version of the OpenAPI document: 1.8.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.apitable.starter.databus.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.apitable.starter.databus.client.model.DatasheetSnapshotSO;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * BaseDatasheetPackSO
 */
@JsonPropertyOrder({
  BaseDatasheetPackSO.JSON_PROPERTY_DATASHEET,
  BaseDatasheetPackSO.JSON_PROPERTY_FIELD_PERMISSION_MAP,
  BaseDatasheetPackSO.JSON_PROPERTY_SNAPSHOT
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class BaseDatasheetPackSO {
  public static final String JSON_PROPERTY_DATASHEET = "datasheet";
  private Object datasheet = null;

  public static final String JSON_PROPERTY_FIELD_PERMISSION_MAP = "fieldPermissionMap";
  private Object fieldPermissionMap = null;

  public static final String JSON_PROPERTY_SNAPSHOT = "snapshot";
  private DatasheetSnapshotSO snapshot;

  public BaseDatasheetPackSO() {
  }

  public BaseDatasheetPackSO datasheet(Object datasheet) {
    
    this.datasheet = datasheet;
    return this;
  }

   /**
   * Get datasheet
   * @return datasheet
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATASHEET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getDatasheet() {
    return datasheet;
  }


  @JsonProperty(JSON_PROPERTY_DATASHEET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDatasheet(Object datasheet) {
    this.datasheet = datasheet;
  }


  public BaseDatasheetPackSO fieldPermissionMap(Object fieldPermissionMap) {
    
    this.fieldPermissionMap = fieldPermissionMap;
    return this;
  }

   /**
   * Get fieldPermissionMap
   * @return fieldPermissionMap
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIELD_PERMISSION_MAP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getFieldPermissionMap() {
    return fieldPermissionMap;
  }


  @JsonProperty(JSON_PROPERTY_FIELD_PERMISSION_MAP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFieldPermissionMap(Object fieldPermissionMap) {
    this.fieldPermissionMap = fieldPermissionMap;
  }


  public BaseDatasheetPackSO snapshot(DatasheetSnapshotSO snapshot) {
    
    this.snapshot = snapshot;
    return this;
  }

   /**
   * Get snapshot
   * @return snapshot
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SNAPSHOT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public DatasheetSnapshotSO getSnapshot() {
    return snapshot;
  }


  @JsonProperty(JSON_PROPERTY_SNAPSHOT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSnapshot(DatasheetSnapshotSO snapshot) {
    this.snapshot = snapshot;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BaseDatasheetPackSO baseDatasheetPackSO = (BaseDatasheetPackSO) o;
    return Objects.equals(this.datasheet, baseDatasheetPackSO.datasheet) &&
        Objects.equals(this.fieldPermissionMap, baseDatasheetPackSO.fieldPermissionMap) &&
        Objects.equals(this.snapshot, baseDatasheetPackSO.snapshot);
  }

  @Override
  public int hashCode() {
    return Objects.hash(datasheet, fieldPermissionMap, snapshot);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BaseDatasheetPackSO {\n");
    sb.append("    datasheet: ").append(toIndentedString(datasheet)).append("\n");
    sb.append("    fieldPermissionMap: ").append(toIndentedString(fieldPermissionMap)).append("\n");
    sb.append("    snapshot: ").append(toIndentedString(snapshot)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

