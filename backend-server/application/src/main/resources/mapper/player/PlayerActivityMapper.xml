<?xml version="1.0" encoding="UTF-8"?>
<!--
 APITable <https://github.com/apitable/apitable>
 Copyright (C) 2022 APITable Ltd. <https://apitable.com>

 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU Affero General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU Affero General Public License for more details.

 You should have received a copy of the GNU Affero General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.apitable.player.mapper.PlayerActivityMapper">

    <select id="selectActionsByUserId" resultType="java.lang.String">
        SELECT actions
        FROM ${tablePrefix}player_activity
        WHERE user_id = #{userId}
    </select>

    <select id="countByUserId" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM ${tablePrefix}player_activity
        WHERE user_id = #{userId}
    </select>

    <select id="selectActionsVal" resultType="java.lang.Object">
        SELECT JSON_EXTRACT(actions, CONCAT('$.', #{key}))
        FROM ${tablePrefix}player_activity
        WHERE user_id = #{userId}
    </select>

    <update id="updateActionsByJsonSet">
        UPDATE ${tablePrefix}player_activity
        SET actions = JSON_SET(actions, CONCAT('$.', #{key}), #{value})
        WHERE user_id IN
        <foreach collection="userIds" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <update id="updateActionsReplaceByUserId">
        UPDATE ${tablePrefix}player_activity
        SET actions = JSON_REPLACE(actions, CONCAT('$.', #{key}), #{value})
        WHERE user_id = #{userId}
    </update>

    <update id="updateActionsRemoveByUserId">
        UPDATE ${tablePrefix}player_activity
        SET actions = JSON_REMOVE(actions, CONCAT('$.', #{key}))
        WHERE user_id = #{userId}
    </update>

    <update id="updateActionsByUserId">
        UPDATE ${tablePrefix}player_activity
        SET actions = #{act}
        WHERE user_id = #{userId}
    </update>
</mapper>
