import java.nio.charset.StandardCharsets
import java.time.LocalDateTime

plugins {
    id 'org.springframework.boot'
    id 'testing.java-conventions'
    id 'idea'
    id 'com.google.protobuf'
}

dependencies {
    implementation project(':shared:core')

    implementation project(':shared:starters:sms')
    implementation project(':shared:starters:mail')
    implementation project(':shared:starters:amqp')
    implementation project(':shared:starters:oss')
    implementation project(':shared:starters:socketio')
    implementation project(':shared:starters:beetl')

    annotationProcessor rootProject.ext.dependencies['configuration-processor']

    implementation rootProject.ext.dependencies['spring-web-starter']
    implementation rootProject.ext.dependencies['spring-thymeleaf']
    implementation rootProject.ext.dependencies['spring-mail-starter']
    implementation rootProject.ext.dependencies['spring-actuator-starter']
    implementation rootProject.ext.dependencies['spring-aop-starter']
    implementation rootProject.ext.dependencies['spring-validation-starter']
    implementation rootProject.ext.dependencies['spring-security-starter']
    implementation rootProject.ext.dependencies['spring-cache-starter']
    implementation rootProject.ext.dependencies['spring-integration-starter']
    implementation rootProject.ext.dependencies['spring-integration-redis']
    implementation rootProject.ext.dependencies['spring-thymeleaf-starter']
    implementation(rootProject.ext.dependencies['spring-session-redis']) {
        exclude group: 'io.lettuce', module: 'lettuce-core'
    }
    implementation('org.apache.commons:commons-pool2')
    implementation rootProject.ext.dependencies['jedis']
    implementation rootProject.ext.dependencies['spring-security-cas']
    implementation rootProject.ext.dependencies['prometheus']
    implementation rootProject.ext.dependencies['mybatis-plus-starter']
    runtimeOnly rootProject.ext.dependencies['mysql']
    implementation rootProject.ext.dependencies['easyexcel']
    implementation rootProject.ext.dependencies['p6spy']
    implementation rootProject.ext.dependencies['servlet-api']
    implementation rootProject.ext.dependencies['hutool']
    implementation rootProject.ext.dependencies['swagger2']
    implementation rootProject.ext.dependencies['java-semver']
    implementation rootProject.ext.dependencies['grpc-spring-boot']
    implementation rootProject.ext.dependencies['grpc-server-spring-boot']
    implementation rootProject.ext.dependencies['pdf']
    implementation rootProject.ext.dependencies['sentry']
    implementation(rootProject.ext.dependencies['spring-cloud-starter-sleuth']) {
        exclude group: 'org.springframework.cloud', module: 'spring-cloud-sleuth-brave'
    }
    implementation rootProject.ext.dependencies['spring-cloud-sleuth-otel']
    implementation rootProject.ext.dependencies['opentelemetry-exporter-jaeger']
    implementation rootProject.ext.dependencies['okhttp3']
    implementation rootProject.ext.dependencies['jsoup']
    implementation rootProject.ext.dependencies['protobuf-java']
    implementation rootProject.ext.dependencies['io-grpc']
    implementation(rootProject.ext.dependencies['shedlock'])
    implementation(rootProject.ext.dependencies['shedlock-redis'])
    implementation rootProject.ext.dependencies['springdoc-openapi-ui']
    implementation rootProject.ext.dependencies['knife4j-openapi3']

    runtimeOnly rootProject.ext.dependencies['mysql']

    annotationProcessor rootProject.ext.dependencies['lombok']
    compileOnly rootProject.ext.dependencies['lombok']

    testCompileOnly rootProject.ext.dependencies["lombok"]
    testAnnotationProcessor rootProject.ext.dependencies["lombok"]

    testImplementation rootProject.ext.dependencies['spring-test-starter']
    testImplementation rootProject.ext.dependencies['mybatis-plus-starter-test']
    testImplementation 'org.rnorth.visible-assertions:visible-assertions:2.1.2'
    testImplementation("org.json:json:${json_java_version}")

    // for clock module
    testImplementation rootProject.ext.dependencies['assertj']
    testImplementation rootProject.ext.dependencies['awaitility']

    // for enterprise
    implementation rootProject.ext.dependencies['spring-plugin-core']
    implementation rootProject.ext.dependencies['spring-plugin-metadata']

    // for v-ee
    implementation(rootProject.ext.dependencies['social-dingtalk'])
    implementation(rootProject.ext.dependencies['social-feishu'])
    implementation(rootProject.ext.dependencies['social-wecom'])
    implementation(rootProject.ext.dependencies['social-qq'])
    implementation rootProject.ext.dependencies['pingpp']
    implementation(rootProject.ext.dependencies['aliyun-core'])
    implementation(rootProject.ext.dependencies['aliyun-afs'])
    implementation rootProject.ext.dependencies['nimbus']
    implementation files('lib/aegis-java-sdk-2.3.3.jar')
    implementation(rootProject.ext.dependencies['wx-miniapp'])
    implementation(rootProject.ext.dependencies['wx-mp'])
    implementation(rootProject.ext.dependencies['wx-open'])
    implementation(rootProject.ext.dependencies['v-client'])
    implementation(rootProject.ext.dependencies['sensors'])

    // for apitable-ee
    implementation(rootProject.ext.dependencies['auth0'])
    implementation(rootProject.ext.dependencies['stripe'])
}

jar {
    enabled = false
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

compileJava.dependsOn processResources
bootJar.dependsOn processResources

// Compile Java Setting
tasks.withType(JavaCompile).configureEach {
    options.encoding = StandardCharsets.UTF_8
    options.warnings = false
    options.compilerArgs += '-Xlint:-deprecation'
}

bootJar {
    mainClass.set('com.apitable.Application')
    manifest {
        attributes 'Start-Class': 'com.apitable.Application'
        attributes 'Implementation-Version': archiveVersion
        attributes 'Built-Gradle': gradle.gradleVersion
        attributes 'Build-OS': System.getProperty("os.name")
        attributes 'Built-By': System.getProperty("user.name")
        attributes 'Build-Jdk': System.getProperty("java.version")
        attributes 'Build-Timestamp': LocalDateTime.now().toString()
    }
}

// SpringBoot Plugin On Gradle
springBoot {
    mainClass.set('com.apitable.Application')
    // build-info.properties in resources/main/META-INF directory
    buildInfo {
        properties {
            artifact = 'Api Server'
            version = rootProject.version
            group = rootProject.group
            name = 'Api Server'
        }
    }
}

test {
    // Stops test execution after the first failed test.
    failFast = true
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protobuf_java_version}"
    }
    generatedFilesBaseDir = "$projectDir/src/generated"
    clean {
        delete generatedFilesBaseDir
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${io_grpc_version}"
        }
    }

    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

idea {
    module {
        sourceDirs += file('src/generated/main/java')
        sourceDirs += file('src/generated/main/grpc')
        generatedSourceDirs += file('src/generated/main/java')
        generatedSourceDirs += file('src/generated/main/grpc')
    }
}
