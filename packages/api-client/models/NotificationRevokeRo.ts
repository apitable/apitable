/**
 * Api Document
 * Backend_Server Api Document
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

/**
* Undo notification parameters
*/
export class NotificationRevokeRo {
    /**
    * Uuid of the notified user (optional)
    */
    'uuid'?: Array<string>;
    /**
    * Space ID (optional, either uuid or space ID)
    */
    'spaceId'?: string;
    /**
    * Template ID
    */
    'templateId': string;
    /**
    * Version number (optional)
    */
    'version'?: string;
    /**
    * Expiration time (optional) accurate to milliseconds
    */
    'expireAt'?: string;
    /**
    * Undo type: 1 read, 2 delete, read by default
    */
    'revokeType'?: number;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "uuid",
            "baseName": "uuid",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "spaceId",
            "baseName": "spaceId",
            "type": "string",
            "format": ""
        },
        {
            "name": "templateId",
            "baseName": "templateId",
            "type": "string",
            "format": ""
        },
        {
            "name": "version",
            "baseName": "version",
            "type": "string",
            "format": ""
        },
        {
            "name": "expireAt",
            "baseName": "expireAt",
            "type": "string",
            "format": ""
        },
        {
            "name": "revokeType",
            "baseName": "revokeType",
            "type": "number",
            "format": "int32"
        }    ];

    static getAttributeTypeMap() {
        return NotificationRevokeRo.attributeTypeMap;
    }

    public constructor() {
    }
}

