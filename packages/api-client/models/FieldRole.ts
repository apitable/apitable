/**
 * Api Document
 * Backend_Server Api Document
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { MemberTeamPathInfo } from '../models/MemberTeamPathInfo';
import { HttpFile } from '../http/http';

/**
* Data Table Field Role View
*/
export class FieldRole {
    /**
    * Org Unit ID
    */
    'unitId'?: number;
    /**
    * Organization Unit Name
    */
    'unitName'?: string;
    /**
    * Type: 1-Department, 2-Label, 3-Member
    */
    'unitType'?: number;
    /**
    * When an organization unit is a member, indicate whether it is an administrator
    */
    'isAdmin'?: boolean;
    /**
    * The number of members of the department. It is returned when the type is department
    */
    'memberCount'?: number;
    /**
    * Head portrait, returned when the type is member
    */
    'avatar'?: string;
    /**
    * Department, returned when the type is member
    */
    'teams'?: string;
    /**
    * Role
    */
    'role'?: string;
    /**
    * Mark whether it is the field authority owner (open)
    */
    'isOwner'?: boolean;
    /**
    * Whether the role permission is invalid
    */
    'roleInvalid'?: boolean;
    /**
    * Whether read-only permission can be set
    */
    'canRead'?: boolean;
    /**
    * Whether editing permission can be set
    */
    'canEdit'?: boolean;
    /**
    * Whether permission can be removed
    */
    'canRemove'?: boolean;
    /**
    * Node manageable flag (space station administrator+node manageable organizational unit)
    */
    'nodeManageable'?: boolean;
    /**
    * Permission inheritance flag
    */
    'permissionExtend'?: boolean;
    /**
    * memberId / teamId
    */
    'unitRefId'?: number;
    /**
    * team id and full hierarchy team path name
    */
    'teamData'?: Array<MemberTeamPathInfo>;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "unitId",
            "baseName": "unitId",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "unitName",
            "baseName": "unitName",
            "type": "string",
            "format": ""
        },
        {
            "name": "unitType",
            "baseName": "unitType",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "isAdmin",
            "baseName": "isAdmin",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "memberCount",
            "baseName": "memberCount",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "avatar",
            "baseName": "avatar",
            "type": "string",
            "format": ""
        },
        {
            "name": "teams",
            "baseName": "teams",
            "type": "string",
            "format": ""
        },
        {
            "name": "role",
            "baseName": "role",
            "type": "string",
            "format": ""
        },
        {
            "name": "isOwner",
            "baseName": "isOwner",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "roleInvalid",
            "baseName": "roleInvalid",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "canRead",
            "baseName": "canRead",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "canEdit",
            "baseName": "canEdit",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "canRemove",
            "baseName": "canRemove",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "nodeManageable",
            "baseName": "nodeManageable",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "permissionExtend",
            "baseName": "permissionExtend",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "unitRefId",
            "baseName": "unitRefId",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "teamData",
            "baseName": "teamData",
            "type": "Array<MemberTeamPathInfo>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return FieldRole.attributeTypeMap;
    }

    public constructor() {
    }
}

