/**
 * Api Document
 * Backend_Server Api Document
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { MemberTeamPathInfo } from '../models/MemberTeamPathInfo';
import { HttpFile } from '../http/http';

/**
* Page: member list view
*/
export class MemberPageVo {
    /**
    * Member ID
    */
    'memberId'?: number;
    /**
    * Head portrait address
    */
    'avatar'?: string;
    /**
    * User nickname
    */
    'nickName'?: string;
    /**
    * Member Name
    */
    'memberName'?: string;
    /**
    * Phone number
    */
    'mobile'?: string;
    /**
    * Email
    */
    'email'?: string;
    /**
    * Department ID
    */
    'teamIds'?: string;
    /**
    * Department
    */
    'teams'?: string;
    /**
    * Whether activated
    */
    'isActive'?: boolean;
    /**
    * Primary administrator or not
    */
    'isPrimary'?: boolean;
    /**
    * Sub administrator or not
    */
    'isSubAdmin'?: boolean;
    /**
    * Creat time
    */
    'createdAt'?: Date;
    /**
    * Update time
    */
    'updatedAt'?: Date;
    /**
    * Whether the user has modified the nickname
    */
    'isNickNameModified'?: boolean;
    /**
    * Whether the member has modified the nickname
    */
    'isMemberNameModified'?: boolean;
    /**
    * team\' id and full hierarchy team path name
    */
    'teamData'?: Array<MemberTeamPathInfo>;
    /**
    * default avatar color number
    */
    'avatarColor'?: number;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "memberId",
            "baseName": "memberId",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "avatar",
            "baseName": "avatar",
            "type": "string",
            "format": ""
        },
        {
            "name": "nickName",
            "baseName": "nickName",
            "type": "string",
            "format": ""
        },
        {
            "name": "memberName",
            "baseName": "memberName",
            "type": "string",
            "format": ""
        },
        {
            "name": "mobile",
            "baseName": "mobile",
            "type": "string",
            "format": ""
        },
        {
            "name": "email",
            "baseName": "email",
            "type": "string",
            "format": ""
        },
        {
            "name": "teamIds",
            "baseName": "teamIds",
            "type": "string",
            "format": ""
        },
        {
            "name": "teams",
            "baseName": "teams",
            "type": "string",
            "format": ""
        },
        {
            "name": "isActive",
            "baseName": "isActive",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isPrimary",
            "baseName": "isPrimary",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isSubAdmin",
            "baseName": "isSubAdmin",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "createdAt",
            "baseName": "createdAt",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "updatedAt",
            "baseName": "updatedAt",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "isNickNameModified",
            "baseName": "isNickNameModified",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isMemberNameModified",
            "baseName": "isMemberNameModified",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "teamData",
            "baseName": "teamData",
            "type": "Array<MemberTeamPathInfo>",
            "format": ""
        },
        {
            "name": "avatarColor",
            "baseName": "avatarColor",
            "type": "number",
            "format": "int32"
        }    ];

    static getAttributeTypeMap() {
        return MemberPageVo.attributeTypeMap;
    }

    public constructor() {
    }
}

