/**
 * Api Document
 * Backend_Server Api Document
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AiTrainingDataSource } from '../models/AiTrainingDataSource';
import { MessageCreditLimit } from '../models/MessageCreditLimit';
import { HttpFile } from '../http/http';

export class Ai {
    'id'?: string;
    'name'?: string;
    'picture'?: string;
    'description'?: string;
    'livemode'?: boolean;
    'messageCreditLimit'?: MessageCreditLimit;
    'isTrained'?: boolean;
    'latestTrainingId'?: string;
    'latestTrainingStatus'?: AiLatestTrainingStatusEnum;
    'latestTrainingCompletedAt'?: number;
    'currentConversationId'?: string;
    'currentConversationCreatedAt'?: number;
    'created'?: number;
    'type'?: string;
    'model'?: string;
    'prologue'?: string;
    'prompt'?: string;
    'formName'?: string;
    'setting'?: { [key: string]: any; };
    'dataSourcesUpdated'?: boolean;
    'dataSources'?: Array<AiTrainingDataSource>;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "picture",
            "baseName": "picture",
            "type": "string",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "livemode",
            "baseName": "livemode",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "messageCreditLimit",
            "baseName": "messageCreditLimit",
            "type": "MessageCreditLimit",
            "format": ""
        },
        {
            "name": "isTrained",
            "baseName": "isTrained",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "latestTrainingId",
            "baseName": "latestTrainingId",
            "type": "string",
            "format": ""
        },
        {
            "name": "latestTrainingStatus",
            "baseName": "latestTrainingStatus",
            "type": "AiLatestTrainingStatusEnum",
            "format": ""
        },
        {
            "name": "latestTrainingCompletedAt",
            "baseName": "latestTrainingCompletedAt",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "currentConversationId",
            "baseName": "currentConversationId",
            "type": "string",
            "format": ""
        },
        {
            "name": "currentConversationCreatedAt",
            "baseName": "currentConversationCreatedAt",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "created",
            "baseName": "created",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "string",
            "format": ""
        },
        {
            "name": "model",
            "baseName": "model",
            "type": "string",
            "format": ""
        },
        {
            "name": "prologue",
            "baseName": "prologue",
            "type": "string",
            "format": ""
        },
        {
            "name": "prompt",
            "baseName": "prompt",
            "type": "string",
            "format": ""
        },
        {
            "name": "formName",
            "baseName": "formName",
            "type": "string",
            "format": ""
        },
        {
            "name": "setting",
            "baseName": "setting",
            "type": "{ [key: string]: any; }",
            "format": ""
        },
        {
            "name": "dataSourcesUpdated",
            "baseName": "dataSourcesUpdated",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "dataSources",
            "baseName": "dataSources",
            "type": "Array<AiTrainingDataSource>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Ai.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum AiLatestTrainingStatusEnum {
    Failed = 'failed',
    New = 'new',
    Training = 'training',
    Success = 'success'
}

